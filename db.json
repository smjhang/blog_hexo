{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1478797542581},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1478797542581},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1478797542585},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1478797542585},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1478797542585},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1478797542585},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1478797542585},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1478797542585},{"_id":"themes/next/_config.yml","hash":"d9f382f7aee283c1d5b5931a6e4da576bdb530c0","modified":1478798084117},{"_id":"themes/next/bower.json","hash":"023b5b945bc45c205129a18e26d304fb9caa15c7","modified":1478797542585},{"_id":"themes/next/gulpfile.coffee","hash":"d267332ec1461042fb16a9cb0737e1555fb4b79e","modified":1478797542585},{"_id":"themes/next/package.json","hash":"0d43e71169c5e08917e73cd12aa79562c836712e","modified":1478797542589},{"_id":"source/_posts/redis-notification.md","hash":"d1701e7e13b2c4a44f06aaf832d8125c9f2b13da","modified":1478731283282},{"_id":"source/_posts/server-send-event.md","hash":"4578139d8aee5541eb510944763583e29fba1fc7","modified":1478796866437},{"_id":"source/categories/index.md","hash":"82a5bcade53f73afb85919ce5905328b8b1c3d96","modified":1478731283282},{"_id":"source/search/index.md","hash":"9d32eb480fc44814e7c5c5122665626c3fa0fdc9","modified":1478731283282},{"_id":"source/tags/index.md","hash":"a804872d560421b49bb9ee3285d78ae0c272b457","modified":1478731283282},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1478797542545},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1478797542545},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1478797520837},{"_id":"themes/next/.git/index","hash":"9afd7b04a1b5b9e24cd2c79a1c1244f0356fcb94","modified":1478799192133},{"_id":"themes/next/.git/packed-refs","hash":"243bd8ada9526c51366f18d4e63883e562312bcb","modified":1478797542545},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1478797542581},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1478797542581},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1478797542585},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1478797542585},{"_id":"themes/next/languages/en.yml","hash":"63de36e9f5822084b61b03a507f6246f8f962b3f","modified":1478797542585},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1478797542585},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1478797542585},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1478797542585},{"_id":"themes/next/languages/ko.yml","hash":"ce8b047c89daae77c03482fc76f16ffec6bdbf2d","modified":1478797542585},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1478797542585},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1478797542585},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1478797542585},{"_id":"themes/next/languages/zh-Hans.yml","hash":"ed36a28104f3c185fc4a0b3e52071d0efabe168c","modified":1478797542585},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1478797542585},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1478797542585},{"_id":"themes/next/layout/_layout.swig","hash":"627aa021dd052d3700e84f8c2eeabd4e30989158","modified":1478797542585},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1478797542585},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1478797542589},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1478797542589},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1478797542589},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1478797542589},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1478797542589},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1478797542589},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1478797542589},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1478797542605},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1478797542605},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1478797542605},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542593},{"_id":"source/_posts/server-send-event/delete.jpg","hash":"a62bdffdaff7b37786caa38428f21d1e5dc0629f","modified":1478731283282},{"_id":"source/_posts/server-send-event/insert.jpg","hash":"aa7db2d6b34b77bf7c9cf276dd6eb8525761b65a","modified":1478731283282},{"_id":"source/_posts/server-send-event/main.jpg","hash":"6076817953e541bef5bbc8cc329ef21b931f8a17","modified":1478731283282},{"_id":"source/_posts/server-send-event/update.jpg","hash":"dc115703ba79d6a1c3b26ddbc7f24ff178531847","modified":1478731283282},{"_id":"source/_posts/server-send-event/通訊流程圖.jpg","hash":"69455ef15935749843b5fdf05c0025d2c19bfc0f","modified":1478731283282},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1478797520857},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1478797520857},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1478797520857},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1478797520857},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1478797520857},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1478797520853},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1478797520857},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1478797520857},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1478797520857},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1478797520849},{"_id":"themes/next/.git/logs/HEAD","hash":"ef6f02c5794a9e82531e58c352c6514fe2c24dc3","modified":1478797542545},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"bc311e9f4333188da5c9c721ae467ba14410d5b2","modified":1478797542585},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1478797542585},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"084867c289c95c5ebc18435a3b2092091bb8e2ba","modified":1478799188545},{"_id":"themes/next/layout/_macro/post.swig","hash":"ea40d388ae190e2228cbe54f054be621e3fa061c","modified":1478797542585},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1478797542585},{"_id":"themes/next/layout/_partials/comments.swig","hash":"58fd826ca75b0cbc48b61a58da4b841e2fa34403","modified":1478797542585},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1478797542585},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1478797542585},{"_id":"themes/next/layout/_partials/head.swig","hash":"06b6604176367af52587312e2575b52ecf53c3d9","modified":1478797542585},{"_id":"themes/next/layout/_partials/header.swig","hash":"6c49bf845ef58014f0d417e3533704406340024b","modified":1478799368021},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1478797542585},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1478797542585},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1478797542585},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1478797542585},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1478797542585},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1478797542585},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1478797542589},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1478797542589},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1478797542589},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1478797542589},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1478797542593},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1478797542593},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1478797542593},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1478797542593},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1478797542593},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1478797542593},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1478797542593},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1478797542593},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478797542593},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478797542593},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1478797542593},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1478797542593},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1478797542593},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542585},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542585},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542589},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542589},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542589},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542589},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478797542589},{"_id":"themes/next/.git/refs/heads/master","hash":"d6c22a05113bbbce7488f021e3b6950149e5c281","modified":1478797542545},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1478797542585},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1478797542585},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1478797542585},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1478797542585},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1478797542585},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1478797542585},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1478797542585},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1478797542585},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1478797542585},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"dc8023c524594b6b85905c776899f5f53973577f","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1478797542585},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1478797542589},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1478797542589},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1478797542589},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1478797542589},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1478797542589},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1478797542589},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1478797542593},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1478797542593},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1478797542593},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1478797542593},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1478797542593},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1478797542593},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1478797542593},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1478797542597},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1478797542601},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1478797542601},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1478797542601},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1478797542601},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1478797542601},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1478797542601},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1478797542601},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1478797542601},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1478797542601},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1478797542601},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1478797542605},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1478797542605},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1478797542601},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"ef6f02c5794a9e82531e58c352c6514fe2c24dc3","modified":1478797542545},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1478797542545},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3065c1bcb54da1e0018136595741341ac71ef9e7","modified":1478797542585},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1478797542585},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1478797542589},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1478797542589},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1478797542589},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1478797542589},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1478797542589},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1478797542589},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1478797542589},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1478797542593},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1478797542601},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1478797542601},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1478797542601},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.idx","hash":"f4a5ac1fe0329243bf6b253a0ea4691d0afe924c","modified":1478797542261},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1478797542597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1478797542601},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1478797542601},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"ef6f02c5794a9e82531e58c352c6514fe2c24dc3","modified":1478797542545},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"d23db2f598b8eb274680023745ba6d6d466cd84a","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1478797542589},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1478797542589},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1478797542589},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478797542593},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1478797542593},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1478797542601},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1478797542597},{"_id":"themes/next/.git/objects/pack/pack-d7f9900e407f50cf6854c435d4f274ead2f5117b.pack","hash":"d7c2c82c7ad561df7778869a4aed0b762d416269","modified":1478797542257},{"_id":"public/atom.xml","hash":"abfc398313f9e71b19dbf40ee825fc1532decb14","modified":1478799378248},{"_id":"public/search.xml","hash":"9124dda96aed31d8edc22866c5d600a2a1341335","modified":1478799378258},{"_id":"public/sitemap.xml","hash":"6c92b9b814506e45d78731b2f3eb3f236b17135a","modified":1478799378259},{"_id":"public/categories/index.html","hash":"63fc0fbf9918ec709f427a93253b40593379ea55","modified":1478799378286},{"_id":"public/tags/index.html","hash":"e614ec5a46c9d3f253dbc99710cd67494fbab2c1","modified":1478799378286},{"_id":"public/search/index.html","hash":"a2dbb5ebfeabc2885e8eed40a3db1660341b95f3","modified":1478799378286},{"_id":"public/archives/index.html","hash":"93ae5c08868f80fd078ed6fba875fecbf6bc7cb5","modified":1478799378286},{"_id":"public/archives/2016/index.html","hash":"bdc40c4b272b8d66b5af1d3b8370f71b88540235","modified":1478799378287},{"_id":"public/archives/2016/07/index.html","hash":"80d3c9d4c1a498bd5b2ab8500908e23eac518162","modified":1478799378287},{"_id":"public/archives/2016/09/index.html","hash":"eeb23be6deebf082be4c73b8909ee23b35281e51","modified":1478799378287},{"_id":"public/tags/Redis/index.html","hash":"093678effb73fc9b8faf1eabc0185be2b7d8eee3","modified":1478799378287},{"_id":"public/tags/HTML5/index.html","hash":"c4dfbbfbbfa762e13443b1bf17d8dc64816e2d4a","modified":1478799378287},{"_id":"public/tags/ES2015/index.html","hash":"acf596ec4bb86567adae8b775b5bfd15dd1ea1c4","modified":1478799378287},{"_id":"public/2016/09/08/server-send-event/index.html","hash":"719d9f9fdbf703b4fc9d0b270d84701157163a80","modified":1478799378288},{"_id":"public/2016/07/27/redis-notification/index.html","hash":"5311fdd7368de00e879b4fa3ea89956c87280e74","modified":1478799378288},{"_id":"public/index.html","hash":"059c7797de8074c105802eca2530d2e8b2c86f94","modified":1478799378288},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1478799378303},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1478799378303},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1478799378303},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1478799378303},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1478799378303},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1478799378303},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1478799378303},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1478799378303},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478799378303},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1478799378303},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1478799378303},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1478799378304},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1478799378306},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1478799378306},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1478799378306},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1478799378306},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1478799378306},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1478799378306},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1478799378306},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1478799378307},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1478799378307},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1478799378307},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1478799378307},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1478799378307},{"_id":"public/2016/09/08/server-send-event/delete.jpg","hash":"a62bdffdaff7b37786caa38428f21d1e5dc0629f","modified":1478799378307},{"_id":"public/2016/09/08/server-send-event/insert.jpg","hash":"aa7db2d6b34b77bf7c9cf276dd6eb8525761b65a","modified":1478799378307},{"_id":"public/2016/09/08/server-send-event/main.jpg","hash":"6076817953e541bef5bbc8cc329ef21b931f8a17","modified":1478799378307},{"_id":"public/2016/09/08/server-send-event/update.jpg","hash":"dc115703ba79d6a1c3b26ddbc7f24ff178531847","modified":1478799378307},{"_id":"public/2016/09/08/server-send-event/通訊流程圖.jpg","hash":"69455ef15935749843b5fdf05c0025d2c19bfc0f","modified":1478799378307},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1478799379094},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1478799379105},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1478799379106},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1478799379115},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1478799379115},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1478799379115},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1478799379115},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1478799379115},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1478799379115},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1478799379115},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1478799379115},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1478799379115},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1478799379115},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1478799379115},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1478799379115},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1478799379115},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1478799379115},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1478799379116},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1478799379116},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1478799379116},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1478799379116},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1478799379116},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1478799379116},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1478799379116},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1478799379116},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1478799379116},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1478799379116},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1478799379116},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1478799379116},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1478799379116},{"_id":"public/css/main.css","hash":"df629e46220d899214a49fa4da1aaea49232cca6","modified":1478799379116},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1478799379117},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1478799379117},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1478799379117},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1478799379117},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1478799379117},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1478799379117},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1478799379117},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1478799379117},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1478799379117},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1478799379117},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1478799379137}],"Category":[],"Data":[],"Page":[{"title":"分類","date":"2016-09-08T15:36:48.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分類\ndate: 2016-09-08 23:36:48\ntype: \"categories\"\ncomments: false\n---\n","updated":"2016-11-09T22:41:23.282Z","path":"categories/index.html","layout":"page","_id":"civcmyti90001xsavc5g2s1q3","content":"","excerpt":"","more":""},{"title":"標籤","date":"2016-09-08T15:34:36.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 標籤\ndate: 2016-09-08 23:34:36\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-11-09T22:41:23.282Z","path":"tags/index.html","layout":"page","_id":"civcmytid0003xsav6gqbqfqz","content":"","excerpt":"","more":""},{"layout":"search","title":"search","_content":"","source":"search/index.md","raw":"layout: search\ntitle: search\n---","date":"2016-11-09T22:41:23.282Z","updated":"2016-11-09T22:41:23.282Z","path":"search/index.html","comments":1,"_id":"civcmytim0005xsav5ao9z4ur","content":"","excerpt":"","more":""}],"Post":[{"title":"Redis Notification","date":"2016-07-27T14:49:42.000Z","_content":"# 簡介\n在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。\n本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。\n本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。\n\n<!-- more -->\n\n# Redis 資料結構規劃\n商品的資料儲存在 product:#id 的 hash，\n並建立一個 set 用來維護商品清單。\n\n|data type | key          | description  |\n|----------|--------------|------------  |\n|set       | product_ids  | 商品總類清單   |\n|hash      | product:#id  | 商品細節      |\n<caption>表1: 資料結構規劃</caption>\n\n<caption>建立 Redis 資料</capion>\n\n    HMSET product:1 name \"多力多滋組合包-綜合 54g*4包/組\" price 55 stock 256\n    HMSET product:2 name \"【洋芋片】Lays樂事瑞士香濃起司 97g/包\" price 32 stock 179\n    HMSET product:3 name \"【蔓莓纖果】萬歲牌蔓莓纖果150G\"  price 59 stock 326\n    HMSET product:4 name \"【蒜香青豆】盛香珍蒜香青豆 240g/包\" price 42 stock 324\n    HMSET product:5 name \"【義美】義美小泡芙（檸檬風味）171g/盒\" price 64 stock 64\n    HMSET product:6 name \"【洋芋片】波的多超厚切洋芋片-蚵仔煎味\" price 53 stock 182\n    HMSET product:7 name \"【義美】義美小蛋卷（原味）\" price 49 stock 313\n    HMSET product:8 name \"品客碳烤BBQ口味洋芋片\" price 55 stock 158\n    SADD products 1\n    SADD products 2\n    SADD products 3\n    SADD products 4\n    SADD products 5\n    SADD products 6\n    SADD products 7\n    SADD products 8\n\n# Redis keyspace notification \n為了讓物品庫存數量能即時反應到應用程式，必須讓資料庫將資料的異動反應給應用程式，\n這邊說明如何使用 Redis 的 keyspace notification 功能來實現異動事件通知。\n至於更詳細的說明可以看 [官網說明文件][1]。\n[1]: http://redis.io/topics/notifications  \"Redis Keyspace Notifications\"\n\nkeyspace notification 可讓應用程式訂閱 keyspace 更動的事件，\n當 Redis 的資料有異動的時候有兩種類型的事件會被觸發：\n1. 第一種讓我們可以監聽某個 key 是否被異動，當它被異動的時候，我們可以得知異動這個 key 的命令類型，稱為 keyspace 事件。\n2. 第二種讓我們可以監聽是否有某個命令類型被執行，當它被執行時，透過這個事件，我們可以得知被這個命令影響到的 key，稱為 keyevent 事件。\n\nRedis 的事件通知是透過 PUB/SUB 來進行的，因此再使用前需先了解 Redis PUB/SUB 是如何進行的。\n可以參考官網的文件 [Redis PUB/SUB][2]。簡單來說就是一個客戶端訂閱了某個 channel, 另外一個客戶端可以發佈訊息到這個 channel, \n然後前面那個訂閱的客戶端就可以收到第二個客戶端發送過來的訊息了。在 Redis keyspace notification 的應用中，Redis 會負責發佈訊息到指定的 channel, 我們只要接收這些訊息就可以了。\n後面會討論這些 channel。\n\n[2]: http://redis.io/topics/pubsub \"Redis PUB/SUB\"\n\n在使用 keyspace notification 前，需要先打開這個功能，編輯 redis.conf 將 notify-keyspace-events 設成：\n    \n    notify-keyspace-events \"KEA\"\n    \n根據官網的說明，\nK - Keyspace events\nE - Keyevent event\nA - All commands\nKEA 代表要訂閱所有命令類型的第一種和第二種事件。\n更改設定檔要重啟 Redis 後才會生效。\n\nRedis 的事件通知是透過 PUB/SUB 來進行的，因此當上述兩種事件發生的時候，Redis 會分別發佈訊息到以下兩種 channel 上：\n    1. PUBLISH __keyspace@<db id>__:<key name> <command type>\n    2. PUBLISH __keyevent@<db id>__:<command type> <key name> \n\n我們可以透過 PSUBSCRIBE 來訂閱這些事件：\n    1. PSUBSCRIBE __keyspace@*__:*\n    2. PSUBSCRIBE __keyevent@*__:*\n\n假設我們要觀察 del test1 test2 test3 test4 指令對 keyspace 和 keyevent 的影響可以分別訂閱以下兩個 channel\n\n    127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyspace@*__:test*\"\n    3) (integer) 1\n    \n    127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyevent@*__:del\"\n    3) (integer) 1\n    \n設定要處理的 key\n    \n    127.0.0.1:6379> set test1 test1\n    OK\n    127.0.0.1:6379> set test2 test2\n    OK\n    127.0.0.1:6379> set test3 test3\n    OK\n    127.0.0.1:6379> set test4 test4\n    \n注意我這邊開了三個 terminal，分別執行三個 redis-cli，一個監聽對 test* 的異動，一個監聽 del 操作是否被執行，最後一個負責下各種指令。 \n\n在建立過程中，可以看到對 keyspace 的監聽訊息如下：\n\n    127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyspace@*__:test*\"\n    3) (integer) 1\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test1\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test2\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test3\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test4\"\n    4) \"set\"\n\n注意 127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del 那個 redis-cli 沒有任何更新，因為沒有任何 del 操作被執行。\n現在刪除 test, tests, test3, test4：\n\n    127.0.0.1:6379> del test1 test2 test3 test4\n    (integer) 4\n\n可以看到對 keyspace (127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*) 的監聽如下：\n    \n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test1\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test2\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test3\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test4\"\n    4) \"del\"\n\n對 keyevent (127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del)的監聽如下：\n    \n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test1\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test2\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test3\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test4\"\n\n從上面的結果我們可以知道一個命令對多個 key 的操作，是會引發多次 keyspace 事件和 keyevent 事件的。\n然後我們透過這些事件只能知道是甚麼 key 被影響、被甚麼指令影響，而不知道 key 被異動後的資料，如果想要知道 key 的最新資料則要自己再去讀取那個 key。\n\n# 使用 Predis 在 PHP 中操作 Redis\n\n建立一個 redis-notify 專案\n    \n    mkdir redis-notofy\n\n我們這邊使用 composer 來取得 Predis Async, 使用非同步版本的 Predis 比較適合這種監聽事件的任務。\n關於 composer 的使用可以參考 [composer 官網說明文件][3]。\n關於 Predis Async 的介紹可以參考 [Predis Async][4]。\n[3]: https://getcomposer.org/  \"Composer\"\n[4]: https://packagist.org/packages/predis/predis\n在該專案內建立 composer.json 如下：\n\n    {\n      \"require\":{\"predis/predis-async\":\"dev-master\"}\n    }\n\n執行  composer install  來從 Packagist 下載 Predis-Async\n\n    compsoer install\n\n可以開始用 Predis 了，編輯程式檔 notify.php 如下：\n\n```php\n<?php\nrequire __DIR__.'/vendor/autoload.php';\n\nclass LocalStorage\n{\n    private $product_store = []; // 目前所有 products\n\n    /**\n     * 使用前更新目前所有 products\n     * @param \\Predis\\Client $client_sync\n     */\n    public function init(\\Predis\\Client $client_sync)\n    {\n        $all_product_keys = $client_sync->keys('product:*');\n        foreach ($all_product_keys as $product_key) {\n            // 抓取 id\n            preg_match('/product:(\\d+)/', $product_key, $matches);\n            $id = $matches[1];\n            // 設定 id=>product 關聯\n            $this->product_store[$id] = $client_sync->hgetall($product_key);\n        }\n        // 排序 product_store\n        ksort($this->product_store);\n    }\n\n    /**\n     * 判斷 id 是否在 product_store 內\n     * @param $id\n     * @return bool\n     */\n    public function contains($id)\n    {\n        if (isset($this->product_store[$id])) {\n            return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * 處理新增事件\n     * @param $id\n     * @param $product\n     */\n    function insertHandler($id, $product)\n    {\n        echo \"新增 product_store 項目:\\n\";\n        echo \"id: $id\\n\";\n        echo \"name: {$product['name']}\\n\";\n        echo \"price: {$product['price']}\\n\";\n        echo \"stock: {$product['stock']}\\n\\n\";\n        $this->product_store[$id] = $product;\n    }\n\n\n    /**\n     * 處理更改事件\n     * @param $id\n     * @param $product\n     */\n    function updateHandler($id, $product)\n    {\n        echo \"更改 product_store 項目:\\n\";\n        echo \"id: $id\\n\";\n        if ($this->product_store[$id]['name'] !== $product['name']) {\n            echo \"name: {$product['name']}\\n\";\n            $this->product_store[$id]['name'] = $product['name'];\n        }\n        if ($this->product_store[$id]['price'] !== $product['price']) {\n            echo \"price: {$product['price']}\\n\";\n            $this->product_store[$id]['price'] = $product['price'];\n        }\n        if ($this->product_store[$id]['stock'] !== $product['stock']) {\n            echo \"stock: {$product['stock']}\\n\";\n            $this->product_store[$id]['stock'] = $product['stock'];\n        }\n        echo \"\\n\";\n    }\n\n    /**\n     * 處理刪除事件\n     * @param $id\n     * @param $product\n     */\n    function deleteHandler($id, $product)\n    {\n        echo \"刪除 product_store 項目:\\n\";\n        echo \"id: $id\\n\\n\";\n        unset($this->product_store[$id]);\n    }\n\n    /**\n     * 顯示 product_store\n     */\n    function showStore()\n    {\n        foreach ($this->product_store as $id => $product) {\n            echo \"id: $id\\n\";\n            echo \"name: {$product['name']}\\n\";\n            echo \"price: {$product['price']}\\n\";\n            echo \"stock: {$product['stock']}\\n\";\n            echo \"----------------------------------------------\\n\";\n        }\n    }\n\n}\n\n$client = new Predis\\Async\\Client('tcp://127.0.0.1:6379');\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n\n$local_storage = new LocalStorage();\n$local_storage->init($client_sync);\n$local_storage->showStore();\n\n\n/**\n * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理\n */\n$client->connect(function ($client) use ($client_sync, $local_storage) {\n    // 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件\n    $client->pubSubLoop(['psubscribe'=>'__keyspace@*__:product:*'],\n    function ($event, $pubsub) use ($client_sync, $local_storage) {\n        // 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id\n        if (preg_match('/__keyspace@\\d+__:(product:(\\d+))/', $event->channel, $matches)) {\n            $product_key = $matches[1];\n            $product_id = $matches[2];\n            // 取得被異動後，最新的 product 資料\n            $product = $client_sync->hgetall($product_key);\n            // 根據事件傳來的訊息得知操作 key 的類型\n            $op = $event->payload;\n            if ($op === 'del') {\n                $local_storage->deleteHandler($product_id, $product);\n            } else if ($op === 'hset') {\n                // 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改\n                if ($local_storage->contains($product_id)) {\n                    $local_storage->updateHandler($product_id, $product);\n                } else {\n                    $local_storage->insertHandler($product_id,$product);\n                }\n            }\n        }\n    });\n});\n// 開始監聽 keyspace 異動事件\n$client->getEventLoop()->run();\n```\n\n這個程式維護一個本地的商品清單，並且隨時接收 Redis 的最新異動來更新本地清單。\n首先先建立一個 LocalStorage 物件來管理本地商品清單的增刪查改。\n然後使用 Predis Async 來訂閱所有關於 product：* 的異動，\nRedis 的 keyspace notification 對要監聽的每個 key 都建立一個 channel\n要訂閱的 channel 樣式如下：\n    \n    __keyspace@*__:product:*\n\n然後當資料異動事件發生的時候，可以取得 channel 的名稱和從 channel 傳遞過來的訊息：\n\n    channel 的名稱： __keyspace@0__:product:1\n    channel 的訊息： hset\n\n因此我們可以從 channel 的名稱取得被異動的 key 的名稱 product:1，當然也可以只取得部份的 key 名稱 1，來作為 id。\n然後可以從 channel 傳遞過來的訊息得知是甚麼操作異動了 key，這裡是 hset。\n關於各種類型的操作會傳遞甚麼訊息可以查看官網的說明 [官網說明文件][1]。\n詳細的程式可以在 [我的 github 上的 demos 專案][5] 下載，放在 redis-notify 資料夾內。\n\n[5]: https://github.com/smjhang/demos\n\n執行程式可以看到以下結果：\n    \n    simon@simon:~/demos/redis-notify$ php notify.php \n    id: 1\n    name: 多力多滋組合包-綜合 54g*4包/組\n    price: 55\n    stock: 256\n    ----------------------------------------------\n    id: 2\n    name: 【洋芋片】Lays樂事瑞士香濃起司 97g/包\n    price: 32\n    stock: 179\n    ----------------------------------------------\n    id: 3\n    name: 【蔓莓纖果】萬歲牌蔓莓纖果150G\n    price: 59\n    stock: 326\n    ----------------------------------------------\n    id: 4\n    name: 【蒜香青豆】盛香珍蒜香青豆 240g/包\n    price: 42\n    stock: 324\n    ----------------------------------------------\n    id: 5\n    name: 【義美】義美小泡芙（檸檬風味）171g/盒\n    price: 64\n    stock: 64\n    ----------------------------------------------\n    id: 6\n    name: 【洋芋片】波的多超厚切洋芋片-蚵仔煎味\n    price: 53\n    stock: 182\n    ----------------------------------------------\n    id: 7\n    name: 【義美】義美小蛋卷（原味）\n    price: 49\n    stock: 313\n    ----------------------------------------------\n    id: 8\n    name: 品客碳烤BBQ口味洋芋片\n    price: 55\n    stock: 158\n    ----------------------------------------------\n\n另外開一個 Redis client 來異動資料：\n    \n    simon@simon:~/demos$ redis-cli\n    127.0.0.1:6379> HMSET product:9 name '旺旺 仙貝經濟包' price 469 stock 79\n    OK\n    127.0.0.1:6379> HMSET product:9 name '旺旺 仙貝經濟包' price 469 stock 75\n    OK\n    127.0.0.1:6379> DEL product:9\n    (integer) 1\n    127.0.0.1:6379> \n\n可以在 notify.php 的輸出畫面看到新的訊息：\n\n    新增 product_store 項目:\n    id: 9\n    name: 旺旺 仙貝經濟包\n    price: 469\n    stock: 79\n    \n    更改 product_store 項目:\n    id: 9\n    stock: 75\n    \n    刪除 product_store 項目:\n    id: 9\n\n\n# 結論\n這邊介紹 Redis 如何實現資料異動通知的功能。不過要注意的是 Redis 不會保存通知過的訊息，因此如果對 Redis 的連線斷線的話，斷線的應用程式是無法再取得斷線期間的異動通知。\n如果非常在意事件一定要通知到的話，要自己想辦法把事件保留起來，官網上說未來 Redis 可能會將這些通知保留再另外的 SET 內，不過現階段還沒有，可能要自己實作保存事件的部份。","source":"_posts/redis-notification.md","raw":"---\ntitle: Redis Notification\ndate: 2016-07-27 22:49:42\ntags: \n- Redis\n\n---\n# 簡介\n在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。\n本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。\n本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。\n\n<!-- more -->\n\n# Redis 資料結構規劃\n商品的資料儲存在 product:#id 的 hash，\n並建立一個 set 用來維護商品清單。\n\n|data type | key          | description  |\n|----------|--------------|------------  |\n|set       | product_ids  | 商品總類清單   |\n|hash      | product:#id  | 商品細節      |\n<caption>表1: 資料結構規劃</caption>\n\n<caption>建立 Redis 資料</capion>\n\n    HMSET product:1 name \"多力多滋組合包-綜合 54g*4包/組\" price 55 stock 256\n    HMSET product:2 name \"【洋芋片】Lays樂事瑞士香濃起司 97g/包\" price 32 stock 179\n    HMSET product:3 name \"【蔓莓纖果】萬歲牌蔓莓纖果150G\"  price 59 stock 326\n    HMSET product:4 name \"【蒜香青豆】盛香珍蒜香青豆 240g/包\" price 42 stock 324\n    HMSET product:5 name \"【義美】義美小泡芙（檸檬風味）171g/盒\" price 64 stock 64\n    HMSET product:6 name \"【洋芋片】波的多超厚切洋芋片-蚵仔煎味\" price 53 stock 182\n    HMSET product:7 name \"【義美】義美小蛋卷（原味）\" price 49 stock 313\n    HMSET product:8 name \"品客碳烤BBQ口味洋芋片\" price 55 stock 158\n    SADD products 1\n    SADD products 2\n    SADD products 3\n    SADD products 4\n    SADD products 5\n    SADD products 6\n    SADD products 7\n    SADD products 8\n\n# Redis keyspace notification \n為了讓物品庫存數量能即時反應到應用程式，必須讓資料庫將資料的異動反應給應用程式，\n這邊說明如何使用 Redis 的 keyspace notification 功能來實現異動事件通知。\n至於更詳細的說明可以看 [官網說明文件][1]。\n[1]: http://redis.io/topics/notifications  \"Redis Keyspace Notifications\"\n\nkeyspace notification 可讓應用程式訂閱 keyspace 更動的事件，\n當 Redis 的資料有異動的時候有兩種類型的事件會被觸發：\n1. 第一種讓我們可以監聽某個 key 是否被異動，當它被異動的時候，我們可以得知異動這個 key 的命令類型，稱為 keyspace 事件。\n2. 第二種讓我們可以監聽是否有某個命令類型被執行，當它被執行時，透過這個事件，我們可以得知被這個命令影響到的 key，稱為 keyevent 事件。\n\nRedis 的事件通知是透過 PUB/SUB 來進行的，因此再使用前需先了解 Redis PUB/SUB 是如何進行的。\n可以參考官網的文件 [Redis PUB/SUB][2]。簡單來說就是一個客戶端訂閱了某個 channel, 另外一個客戶端可以發佈訊息到這個 channel, \n然後前面那個訂閱的客戶端就可以收到第二個客戶端發送過來的訊息了。在 Redis keyspace notification 的應用中，Redis 會負責發佈訊息到指定的 channel, 我們只要接收這些訊息就可以了。\n後面會討論這些 channel。\n\n[2]: http://redis.io/topics/pubsub \"Redis PUB/SUB\"\n\n在使用 keyspace notification 前，需要先打開這個功能，編輯 redis.conf 將 notify-keyspace-events 設成：\n    \n    notify-keyspace-events \"KEA\"\n    \n根據官網的說明，\nK - Keyspace events\nE - Keyevent event\nA - All commands\nKEA 代表要訂閱所有命令類型的第一種和第二種事件。\n更改設定檔要重啟 Redis 後才會生效。\n\nRedis 的事件通知是透過 PUB/SUB 來進行的，因此當上述兩種事件發生的時候，Redis 會分別發佈訊息到以下兩種 channel 上：\n    1. PUBLISH __keyspace@<db id>__:<key name> <command type>\n    2. PUBLISH __keyevent@<db id>__:<command type> <key name> \n\n我們可以透過 PSUBSCRIBE 來訂閱這些事件：\n    1. PSUBSCRIBE __keyspace@*__:*\n    2. PSUBSCRIBE __keyevent@*__:*\n\n假設我們要觀察 del test1 test2 test3 test4 指令對 keyspace 和 keyevent 的影響可以分別訂閱以下兩個 channel\n\n    127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyspace@*__:test*\"\n    3) (integer) 1\n    \n    127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyevent@*__:del\"\n    3) (integer) 1\n    \n設定要處理的 key\n    \n    127.0.0.1:6379> set test1 test1\n    OK\n    127.0.0.1:6379> set test2 test2\n    OK\n    127.0.0.1:6379> set test3 test3\n    OK\n    127.0.0.1:6379> set test4 test4\n    \n注意我這邊開了三個 terminal，分別執行三個 redis-cli，一個監聽對 test* 的異動，一個監聽 del 操作是否被執行，最後一個負責下各種指令。 \n\n在建立過程中，可以看到對 keyspace 的監聽訊息如下：\n\n    127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*\n    Reading messages... (press Ctrl-C to quit)\n    1) \"psubscribe\"\n    2) \"__keyspace@*__:test*\"\n    3) (integer) 1\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test1\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test2\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test3\"\n    4) \"set\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test4\"\n    4) \"set\"\n\n注意 127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del 那個 redis-cli 沒有任何更新，因為沒有任何 del 操作被執行。\n現在刪除 test, tests, test3, test4：\n\n    127.0.0.1:6379> del test1 test2 test3 test4\n    (integer) 4\n\n可以看到對 keyspace (127.0.0.1:6379> PSUBSCRIBE __keyspace@*__:test*) 的監聽如下：\n    \n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test1\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test2\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test3\"\n    4) \"del\"\n    1) \"pmessage\"\n    2) \"__keyspace@*__:test*\"\n    3) \"__keyspace@0__:test4\"\n    4) \"del\"\n\n對 keyevent (127.0.0.1:6379> PSUBSCRIBE __keyevent@*__:del)的監聽如下：\n    \n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test1\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test2\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test3\"\n    1) \"pmessage\"\n    2) \"__keyevent@*__:del\"\n    3) \"__keyevent@0__:del\"\n    4) \"test4\"\n\n從上面的結果我們可以知道一個命令對多個 key 的操作，是會引發多次 keyspace 事件和 keyevent 事件的。\n然後我們透過這些事件只能知道是甚麼 key 被影響、被甚麼指令影響，而不知道 key 被異動後的資料，如果想要知道 key 的最新資料則要自己再去讀取那個 key。\n\n# 使用 Predis 在 PHP 中操作 Redis\n\n建立一個 redis-notify 專案\n    \n    mkdir redis-notofy\n\n我們這邊使用 composer 來取得 Predis Async, 使用非同步版本的 Predis 比較適合這種監聽事件的任務。\n關於 composer 的使用可以參考 [composer 官網說明文件][3]。\n關於 Predis Async 的介紹可以參考 [Predis Async][4]。\n[3]: https://getcomposer.org/  \"Composer\"\n[4]: https://packagist.org/packages/predis/predis\n在該專案內建立 composer.json 如下：\n\n    {\n      \"require\":{\"predis/predis-async\":\"dev-master\"}\n    }\n\n執行  composer install  來從 Packagist 下載 Predis-Async\n\n    compsoer install\n\n可以開始用 Predis 了，編輯程式檔 notify.php 如下：\n\n```php\n<?php\nrequire __DIR__.'/vendor/autoload.php';\n\nclass LocalStorage\n{\n    private $product_store = []; // 目前所有 products\n\n    /**\n     * 使用前更新目前所有 products\n     * @param \\Predis\\Client $client_sync\n     */\n    public function init(\\Predis\\Client $client_sync)\n    {\n        $all_product_keys = $client_sync->keys('product:*');\n        foreach ($all_product_keys as $product_key) {\n            // 抓取 id\n            preg_match('/product:(\\d+)/', $product_key, $matches);\n            $id = $matches[1];\n            // 設定 id=>product 關聯\n            $this->product_store[$id] = $client_sync->hgetall($product_key);\n        }\n        // 排序 product_store\n        ksort($this->product_store);\n    }\n\n    /**\n     * 判斷 id 是否在 product_store 內\n     * @param $id\n     * @return bool\n     */\n    public function contains($id)\n    {\n        if (isset($this->product_store[$id])) {\n            return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * 處理新增事件\n     * @param $id\n     * @param $product\n     */\n    function insertHandler($id, $product)\n    {\n        echo \"新增 product_store 項目:\\n\";\n        echo \"id: $id\\n\";\n        echo \"name: {$product['name']}\\n\";\n        echo \"price: {$product['price']}\\n\";\n        echo \"stock: {$product['stock']}\\n\\n\";\n        $this->product_store[$id] = $product;\n    }\n\n\n    /**\n     * 處理更改事件\n     * @param $id\n     * @param $product\n     */\n    function updateHandler($id, $product)\n    {\n        echo \"更改 product_store 項目:\\n\";\n        echo \"id: $id\\n\";\n        if ($this->product_store[$id]['name'] !== $product['name']) {\n            echo \"name: {$product['name']}\\n\";\n            $this->product_store[$id]['name'] = $product['name'];\n        }\n        if ($this->product_store[$id]['price'] !== $product['price']) {\n            echo \"price: {$product['price']}\\n\";\n            $this->product_store[$id]['price'] = $product['price'];\n        }\n        if ($this->product_store[$id]['stock'] !== $product['stock']) {\n            echo \"stock: {$product['stock']}\\n\";\n            $this->product_store[$id]['stock'] = $product['stock'];\n        }\n        echo \"\\n\";\n    }\n\n    /**\n     * 處理刪除事件\n     * @param $id\n     * @param $product\n     */\n    function deleteHandler($id, $product)\n    {\n        echo \"刪除 product_store 項目:\\n\";\n        echo \"id: $id\\n\\n\";\n        unset($this->product_store[$id]);\n    }\n\n    /**\n     * 顯示 product_store\n     */\n    function showStore()\n    {\n        foreach ($this->product_store as $id => $product) {\n            echo \"id: $id\\n\";\n            echo \"name: {$product['name']}\\n\";\n            echo \"price: {$product['price']}\\n\";\n            echo \"stock: {$product['stock']}\\n\";\n            echo \"----------------------------------------------\\n\";\n        }\n    }\n\n}\n\n$client = new Predis\\Async\\Client('tcp://127.0.0.1:6379');\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n\n$local_storage = new LocalStorage();\n$local_storage->init($client_sync);\n$local_storage->showStore();\n\n\n/**\n * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理\n */\n$client->connect(function ($client) use ($client_sync, $local_storage) {\n    // 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件\n    $client->pubSubLoop(['psubscribe'=>'__keyspace@*__:product:*'],\n    function ($event, $pubsub) use ($client_sync, $local_storage) {\n        // 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id\n        if (preg_match('/__keyspace@\\d+__:(product:(\\d+))/', $event->channel, $matches)) {\n            $product_key = $matches[1];\n            $product_id = $matches[2];\n            // 取得被異動後，最新的 product 資料\n            $product = $client_sync->hgetall($product_key);\n            // 根據事件傳來的訊息得知操作 key 的類型\n            $op = $event->payload;\n            if ($op === 'del') {\n                $local_storage->deleteHandler($product_id, $product);\n            } else if ($op === 'hset') {\n                // 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改\n                if ($local_storage->contains($product_id)) {\n                    $local_storage->updateHandler($product_id, $product);\n                } else {\n                    $local_storage->insertHandler($product_id,$product);\n                }\n            }\n        }\n    });\n});\n// 開始監聽 keyspace 異動事件\n$client->getEventLoop()->run();\n```\n\n這個程式維護一個本地的商品清單，並且隨時接收 Redis 的最新異動來更新本地清單。\n首先先建立一個 LocalStorage 物件來管理本地商品清單的增刪查改。\n然後使用 Predis Async 來訂閱所有關於 product：* 的異動，\nRedis 的 keyspace notification 對要監聽的每個 key 都建立一個 channel\n要訂閱的 channel 樣式如下：\n    \n    __keyspace@*__:product:*\n\n然後當資料異動事件發生的時候，可以取得 channel 的名稱和從 channel 傳遞過來的訊息：\n\n    channel 的名稱： __keyspace@0__:product:1\n    channel 的訊息： hset\n\n因此我們可以從 channel 的名稱取得被異動的 key 的名稱 product:1，當然也可以只取得部份的 key 名稱 1，來作為 id。\n然後可以從 channel 傳遞過來的訊息得知是甚麼操作異動了 key，這裡是 hset。\n關於各種類型的操作會傳遞甚麼訊息可以查看官網的說明 [官網說明文件][1]。\n詳細的程式可以在 [我的 github 上的 demos 專案][5] 下載，放在 redis-notify 資料夾內。\n\n[5]: https://github.com/smjhang/demos\n\n執行程式可以看到以下結果：\n    \n    simon@simon:~/demos/redis-notify$ php notify.php \n    id: 1\n    name: 多力多滋組合包-綜合 54g*4包/組\n    price: 55\n    stock: 256\n    ----------------------------------------------\n    id: 2\n    name: 【洋芋片】Lays樂事瑞士香濃起司 97g/包\n    price: 32\n    stock: 179\n    ----------------------------------------------\n    id: 3\n    name: 【蔓莓纖果】萬歲牌蔓莓纖果150G\n    price: 59\n    stock: 326\n    ----------------------------------------------\n    id: 4\n    name: 【蒜香青豆】盛香珍蒜香青豆 240g/包\n    price: 42\n    stock: 324\n    ----------------------------------------------\n    id: 5\n    name: 【義美】義美小泡芙（檸檬風味）171g/盒\n    price: 64\n    stock: 64\n    ----------------------------------------------\n    id: 6\n    name: 【洋芋片】波的多超厚切洋芋片-蚵仔煎味\n    price: 53\n    stock: 182\n    ----------------------------------------------\n    id: 7\n    name: 【義美】義美小蛋卷（原味）\n    price: 49\n    stock: 313\n    ----------------------------------------------\n    id: 8\n    name: 品客碳烤BBQ口味洋芋片\n    price: 55\n    stock: 158\n    ----------------------------------------------\n\n另外開一個 Redis client 來異動資料：\n    \n    simon@simon:~/demos$ redis-cli\n    127.0.0.1:6379> HMSET product:9 name '旺旺 仙貝經濟包' price 469 stock 79\n    OK\n    127.0.0.1:6379> HMSET product:9 name '旺旺 仙貝經濟包' price 469 stock 75\n    OK\n    127.0.0.1:6379> DEL product:9\n    (integer) 1\n    127.0.0.1:6379> \n\n可以在 notify.php 的輸出畫面看到新的訊息：\n\n    新增 product_store 項目:\n    id: 9\n    name: 旺旺 仙貝經濟包\n    price: 469\n    stock: 79\n    \n    更改 product_store 項目:\n    id: 9\n    stock: 75\n    \n    刪除 product_store 項目:\n    id: 9\n\n\n# 結論\n這邊介紹 Redis 如何實現資料異動通知的功能。不過要注意的是 Redis 不會保存通知過的訊息，因此如果對 Redis 的連線斷線的話，斷線的應用程式是無法再取得斷線期間的異動通知。\n如果非常在意事件一定要通知到的話，要自己想辦法把事件保留起來，官網上說未來 Redis 可能會將這些通知保留再另外的 SET 內，不過現階段還沒有，可能要自己實作保存事件的部份。","slug":"redis-notification","published":1,"updated":"2016-11-09T22:41:23.282Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civcmyti40000xsavb1a3u3o0","content":"<h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。<br>本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。<br>本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。</p>\n<a id=\"more\"></a>\n<h1 id=\"Redis-資料結構規劃\"><a href=\"#Redis-資料結構規劃\" class=\"headerlink\" title=\"Redis 資料結構規劃\"></a>Redis 資料結構規劃</h1><p>商品的資料儲存在 product:#id 的 hash，<br>並建立一個 set 用來維護商品清單。</p>\n<table>\n<thead>\n<tr>\n<th>data type</th>\n<th>key</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td>product_ids</td>\n<td>商品總類清單</td>\n</tr>\n<tr>\n<td>hash</td>\n<td>product:#id</td>\n<td>商品細節</td>\n</tr>\n</tbody>\n</table>\n<caption>表1: 資料結構規劃</caption>\n\n<p><caption>建立 Redis 資料</caption></p>\n<pre><code>HMSET product:1 name &quot;多力多滋組合包-綜合 54g*4包/組&quot; price 55 stock 256\nHMSET product:2 name &quot;【洋芋片】Lays樂事瑞士香濃起司 97g/包&quot; price 32 stock 179\nHMSET product:3 name &quot;【蔓莓纖果】萬歲牌蔓莓纖果150G&quot;  price 59 stock 326\nHMSET product:4 name &quot;【蒜香青豆】盛香珍蒜香青豆 240g/包&quot; price 42 stock 324\nHMSET product:5 name &quot;【義美】義美小泡芙（檸檬風味）171g/盒&quot; price 64 stock 64\nHMSET product:6 name &quot;【洋芋片】波的多超厚切洋芋片-蚵仔煎味&quot; price 53 stock 182\nHMSET product:7 name &quot;【義美】義美小蛋卷（原味）&quot; price 49 stock 313\nHMSET product:8 name &quot;品客碳烤BBQ口味洋芋片&quot; price 55 stock 158\nSADD products 1\nSADD products 2\nSADD products 3\nSADD products 4\nSADD products 5\nSADD products 6\nSADD products 7\nSADD products 8\n</code></pre><h1 id=\"Redis-keyspace-notification\"><a href=\"#Redis-keyspace-notification\" class=\"headerlink\" title=\"Redis keyspace notification\"></a>Redis keyspace notification</h1><p>為了讓物品庫存數量能即時反應到應用程式，必須讓資料庫將資料的異動反應給應用程式，<br>這邊說明如何使用 Redis 的 keyspace notification 功能來實現異動事件通知。<br>至於更詳細的說明可以看 <a href=\"http://redis.io/topics/notifications\" title=\"Redis Keyspace Notifications\" target=\"_blank\" rel=\"external\">官網說明文件</a>。</p>\n<p>keyspace notification 可讓應用程式訂閱 keyspace 更動的事件，<br>當 Redis 的資料有異動的時候有兩種類型的事件會被觸發：</p>\n<ol>\n<li>第一種讓我們可以監聽某個 key 是否被異動，當它被異動的時候，我們可以得知異動這個 key 的命令類型，稱為 keyspace 事件。</li>\n<li>第二種讓我們可以監聽是否有某個命令類型被執行，當它被執行時，透過這個事件，我們可以得知被這個命令影響到的 key，稱為 keyevent 事件。</li>\n</ol>\n<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此再使用前需先了解 Redis PUB/SUB 是如何進行的。<br>可以參考官網的文件 <a href=\"http://redis.io/topics/pubsub\" title=\"Redis PUB/SUB\" target=\"_blank\" rel=\"external\">Redis PUB/SUB</a>。簡單來說就是一個客戶端訂閱了某個 channel, 另外一個客戶端可以發佈訊息到這個 channel,<br>然後前面那個訂閱的客戶端就可以收到第二個客戶端發送過來的訊息了。在 Redis keyspace notification 的應用中，Redis 會負責發佈訊息到指定的 channel, 我們只要接收這些訊息就可以了。<br>後面會討論這些 channel。</p>\n<p>在使用 keyspace notification 前，需要先打開這個功能，編輯 redis.conf 將 notify-keyspace-events 設成：</p>\n<pre><code>notify-keyspace-events &quot;KEA&quot;\n</code></pre><p>根據官網的說明，<br>K - Keyspace events<br>E - Keyevent event<br>A - All commands<br>KEA 代表要訂閱所有命令類型的第一種和第二種事件。<br>更改設定檔要重啟 Redis 後才會生效。</p>\n<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此當上述兩種事件發生的時候，Redis 會分別發佈訊息到以下兩種 channel 上：</p>\n<pre><code>1. PUBLISH __keyspace@&lt;db id&gt;__:&lt;key name&gt; &lt;command type&gt;\n2. PUBLISH __keyevent@&lt;db id&gt;__:&lt;command type&gt; &lt;key name&gt; \n</code></pre><p>我們可以透過 PSUBSCRIBE 來訂閱這些事件：</p>\n<pre><code>1. PSUBSCRIBE __keyspace@*__:*\n2. PSUBSCRIBE __keyevent@*__:*\n</code></pre><p>假設我們要觀察 del test1 test2 test3 test4 指令對 keyspace 和 keyevent 的影響可以分別訂閱以下兩個 channel</p>\n<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) (integer) 1\n\n127.0.0.1:6379&gt; PSUBSCRIBE __keyevent@*__:del\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) (integer) 1\n</code></pre><p>設定要處理的 key</p>\n<pre><code>127.0.0.1:6379&gt; set test1 test1\nOK\n127.0.0.1:6379&gt; set test2 test2\nOK\n127.0.0.1:6379&gt; set test3 test3\nOK\n127.0.0.1:6379&gt; set test4 test4\n</code></pre><p>注意我這邊開了三個 terminal，分別執行三個 redis-cli，一個監聽對 test* 的異動，一個監聽 del 操作是否被執行，最後一個負責下各種指令。 </p>\n<p>在建立過程中，可以看到對 keyspace 的監聽訊息如下：</p>\n<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) (integer) 1\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test1&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test2&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test3&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test4&quot;\n4) &quot;set&quot;\n</code></pre><p>注意 127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del 那個 redis-cli 沒有任何更新，因為沒有任何 del 操作被執行。<br>現在刪除 test, tests, test3, test4：</p>\n<pre><code>127.0.0.1:6379&gt; del test1 test2 test3 test4\n(integer) 4\n</code></pre><p>可以看到對 keyspace (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyspace@*</strong>:test*) 的監聽如下：</p>\n<pre><code>1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test1&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test2&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test3&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test4&quot;\n4) &quot;del&quot;\n</code></pre><p>對 keyevent (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del)的監聽如下：</p>\n<pre><code>1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test1&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test2&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test3&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test4&quot;\n</code></pre><p>從上面的結果我們可以知道一個命令對多個 key 的操作，是會引發多次 keyspace 事件和 keyevent 事件的。<br>然後我們透過這些事件只能知道是甚麼 key 被影響、被甚麼指令影響，而不知道 key 被異動後的資料，如果想要知道 key 的最新資料則要自己再去讀取那個 key。</p>\n<h1 id=\"使用-Predis-在-PHP-中操作-Redis\"><a href=\"#使用-Predis-在-PHP-中操作-Redis\" class=\"headerlink\" title=\"使用 Predis 在 PHP 中操作 Redis\"></a>使用 Predis 在 PHP 中操作 Redis</h1><p>建立一個 redis-notify 專案</p>\n<pre><code>mkdir redis-notofy\n</code></pre><p>我們這邊使用 composer 來取得 Predis Async, 使用非同步版本的 Predis 比較適合這種監聽事件的任務。<br>關於 composer 的使用可以參考 <a href=\"https://getcomposer.org/\" title=\"Composer\" target=\"_blank\" rel=\"external\">composer 官網說明文件</a>。<br>關於 Predis Async 的介紹可以參考 <a href=\"https://packagist.org/packages/predis/predis\" target=\"_blank\" rel=\"external\">Predis Async</a>。</p>\n<p>在該專案內建立 composer.json 如下：</p>\n<pre><code>{\n  &quot;require&quot;:{&quot;predis/predis-async&quot;:&quot;dev-master&quot;}\n}\n</code></pre><p>執行  composer install  來從 Packagist 下載 Predis-Async</p>\n<pre><code>compsoer install\n</code></pre><p>可以開始用 Predis 了，編輯程式檔 notify.php 如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocalStorage</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $product_store = []; <span class=\"comment\">// 目前所有 products</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 使用前更新目前所有 products</div><div class=\"line\">     * <span class=\"doctag\">@param</span> \\Predis\\Client $client_sync</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">(\\Predis\\Client $client_sync)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">            <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">            preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">            $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 排序 product_store</span></div><div class=\"line\">        ksort(<span class=\"keyword\">$this</span>-&gt;product_store);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 判斷 id 是否在 product_store 內</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@return</span> bool</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">contains</span><span class=\"params\">($id)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id])) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理新增事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"新增 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $product;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理更改事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"更改 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] !== $product[<span class=\"string\">'name'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] !== $product[<span class=\"string\">'price'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] !== $product[<span class=\"string\">'stock'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理刪除事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"刪除 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id]);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 顯示 product_store</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showStore</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;product_store <span class=\"keyword\">as</span> $id =&gt; $product) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"----------------------------------------------\\n\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$client = <span class=\"keyword\">new</span> Predis\\Async\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\"></div><div class=\"line\">$local_storage = <span class=\"keyword\">new</span> LocalStorage();</div><div class=\"line\">$local_storage-&gt;init($client_sync);</div><div class=\"line\">$local_storage-&gt;showStore();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class=\"line\"> */</div><div class=\"line\">$client-&gt;connect(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($client)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class=\"line\">    $client-&gt;pubSubLoop([<span class=\"string\">'psubscribe'</span>=&gt;<span class=\"string\">'__keyspace@*__:product:*'</span>],</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($event, $pubsub)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/__keyspace@\\d+__:(product:(\\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class=\"line\">            $product_key = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            $product_id = $matches[<span class=\"number\">2</span>];</div><div class=\"line\">            <span class=\"comment\">// 取得被異動後，最新的 product 資料</span></div><div class=\"line\">            $product = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">            <span class=\"comment\">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class=\"line\">            $op = $event-&gt;payload;</div><div class=\"line\">            <span class=\"keyword\">if</span> ($op === <span class=\"string\">'del'</span>) &#123;</div><div class=\"line\">                $local_storage-&gt;deleteHandler($product_id, $product);</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($op === <span class=\"string\">'hset'</span>) &#123;</div><div class=\"line\">                <span class=\"comment\">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class=\"line\">                <span class=\"keyword\">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class=\"line\">                    $local_storage-&gt;updateHandler($product_id, $product);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    $local_storage-&gt;insertHandler($product_id,$product);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 開始監聽 keyspace 異動事件</span></div><div class=\"line\">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure>\n<p>這個程式維護一個本地的商品清單，並且隨時接收 Redis 的最新異動來更新本地清單。<br>首先先建立一個 LocalStorage 物件來管理本地商品清單的增刪查改。<br>然後使用 Predis Async 來訂閱所有關於 product：* 的異動，<br>Redis 的 keyspace notification 對要監聽的每個 key 都建立一個 channel<br>要訂閱的 channel 樣式如下：</p>\n<pre><code>__keyspace@*__:product:*\n</code></pre><p>然後當資料異動事件發生的時候，可以取得 channel 的名稱和從 channel 傳遞過來的訊息：</p>\n<pre><code>channel 的名稱： __keyspace@0__:product:1\nchannel 的訊息： hset\n</code></pre><p>因此我們可以從 channel 的名稱取得被異動的 key 的名稱 product:1，當然也可以只取得部份的 key 名稱 1，來作為 id。<br>然後可以從 channel 傳遞過來的訊息得知是甚麼操作異動了 key，這裡是 hset。<br>關於各種類型的操作會傳遞甚麼訊息可以查看官網的說明 <a href=\"http://redis.io/topics/notifications\" title=\"Redis Keyspace Notifications\" target=\"_blank\" rel=\"external\">官網說明文件</a>。<br>詳細的程式可以在 <a href=\"https://github.com/smjhang/demos\" target=\"_blank\" rel=\"external\">我的 github 上的 demos 專案</a> 下載，放在 redis-notify 資料夾內。</p>\n<p>執行程式可以看到以下結果：</p>\n<pre><code>simon@simon:~/demos/redis-notify$ php notify.php \nid: 1\nname: 多力多滋組合包-綜合 54g*4包/組\nprice: 55\nstock: 256\n----------------------------------------------\nid: 2\nname: 【洋芋片】Lays樂事瑞士香濃起司 97g/包\nprice: 32\nstock: 179\n----------------------------------------------\nid: 3\nname: 【蔓莓纖果】萬歲牌蔓莓纖果150G\nprice: 59\nstock: 326\n----------------------------------------------\nid: 4\nname: 【蒜香青豆】盛香珍蒜香青豆 240g/包\nprice: 42\nstock: 324\n----------------------------------------------\nid: 5\nname: 【義美】義美小泡芙（檸檬風味）171g/盒\nprice: 64\nstock: 64\n----------------------------------------------\nid: 6\nname: 【洋芋片】波的多超厚切洋芋片-蚵仔煎味\nprice: 53\nstock: 182\n----------------------------------------------\nid: 7\nname: 【義美】義美小蛋卷（原味）\nprice: 49\nstock: 313\n----------------------------------------------\nid: 8\nname: 品客碳烤BBQ口味洋芋片\nprice: 55\nstock: 158\n----------------------------------------------\n</code></pre><p>另外開一個 Redis client 來異動資料：</p>\n<pre><code>simon@simon:~/demos$ redis-cli\n127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 79\nOK\n127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 75\nOK\n127.0.0.1:6379&gt; DEL product:9\n(integer) 1\n127.0.0.1:6379&gt; \n</code></pre><p>可以在 notify.php 的輸出畫面看到新的訊息：</p>\n<pre><code>新增 product_store 項目:\nid: 9\nname: 旺旺 仙貝經濟包\nprice: 469\nstock: 79\n\n更改 product_store 項目:\nid: 9\nstock: 75\n\n刪除 product_store 項目:\nid: 9\n</code></pre><h1 id=\"結論\"><a href=\"#結論\" class=\"headerlink\" title=\"結論\"></a>結論</h1><p>這邊介紹 Redis 如何實現資料異動通知的功能。不過要注意的是 Redis 不會保存通知過的訊息，因此如果對 Redis 的連線斷線的話，斷線的應用程式是無法再取得斷線期間的異動通知。<br>如果非常在意事件一定要通知到的話，要自己想辦法把事件保留起來，官網上說未來 Redis 可能會將這些通知保留再另外的 SET 內，不過現階段還沒有，可能要自己實作保存事件的部份。</p>\n","excerpt":"<h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>在實現事件驅動設計的過程中，能夠讓資料庫在異動資料時自動發出通知是一個重要的環節，如此一來就不需要有另外一支程式不斷去查詢資料庫的異動，可以節省系統資源。<br>本篇探討將使用 Redis 的 keyspace notification 功能來實現資料異動的即時通知，並且以 PHP 程式來實作。<br>本篇將會以一個線上購物網站的物品庫存清單為例，展示如何實作即時顯示當前貨品庫存量的功能。</p>","more":"<h1 id=\"Redis-資料結構規劃\"><a href=\"#Redis-資料結構規劃\" class=\"headerlink\" title=\"Redis 資料結構規劃\"></a>Redis 資料結構規劃</h1><p>商品的資料儲存在 product:#id 的 hash，<br>並建立一個 set 用來維護商品清單。</p>\n<table>\n<thead>\n<tr>\n<th>data type</th>\n<th>key</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set</td>\n<td>product_ids</td>\n<td>商品總類清單</td>\n</tr>\n<tr>\n<td>hash</td>\n<td>product:#id</td>\n<td>商品細節</td>\n</tr>\n</tbody>\n</table>\n<caption>表1: 資料結構規劃</caption>\n\n<p><caption>建立 Redis 資料</capion></p>\n<pre><code>HMSET product:1 name &quot;多力多滋組合包-綜合 54g*4包/組&quot; price 55 stock 256\nHMSET product:2 name &quot;【洋芋片】Lays樂事瑞士香濃起司 97g/包&quot; price 32 stock 179\nHMSET product:3 name &quot;【蔓莓纖果】萬歲牌蔓莓纖果150G&quot;  price 59 stock 326\nHMSET product:4 name &quot;【蒜香青豆】盛香珍蒜香青豆 240g/包&quot; price 42 stock 324\nHMSET product:5 name &quot;【義美】義美小泡芙（檸檬風味）171g/盒&quot; price 64 stock 64\nHMSET product:6 name &quot;【洋芋片】波的多超厚切洋芋片-蚵仔煎味&quot; price 53 stock 182\nHMSET product:7 name &quot;【義美】義美小蛋卷（原味）&quot; price 49 stock 313\nHMSET product:8 name &quot;品客碳烤BBQ口味洋芋片&quot; price 55 stock 158\nSADD products 1\nSADD products 2\nSADD products 3\nSADD products 4\nSADD products 5\nSADD products 6\nSADD products 7\nSADD products 8\n</code></pre><h1 id=\"Redis-keyspace-notification\"><a href=\"#Redis-keyspace-notification\" class=\"headerlink\" title=\"Redis keyspace notification\"></a>Redis keyspace notification</h1><p>為了讓物品庫存數量能即時反應到應用程式，必須讓資料庫將資料的異動反應給應用程式，<br>這邊說明如何使用 Redis 的 keyspace notification 功能來實現異動事件通知。<br>至於更詳細的說明可以看 <a href=\"http://redis.io/topics/notifications\" title=\"Redis Keyspace Notifications\">官網說明文件</a>。</p>\n<p>keyspace notification 可讓應用程式訂閱 keyspace 更動的事件，<br>當 Redis 的資料有異動的時候有兩種類型的事件會被觸發：</p>\n<ol>\n<li>第一種讓我們可以監聽某個 key 是否被異動，當它被異動的時候，我們可以得知異動這個 key 的命令類型，稱為 keyspace 事件。</li>\n<li>第二種讓我們可以監聽是否有某個命令類型被執行，當它被執行時，透過這個事件，我們可以得知被這個命令影響到的 key，稱為 keyevent 事件。</li>\n</ol>\n<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此再使用前需先了解 Redis PUB/SUB 是如何進行的。<br>可以參考官網的文件 <a href=\"http://redis.io/topics/pubsub\" title=\"Redis PUB/SUB\">Redis PUB/SUB</a>。簡單來說就是一個客戶端訂閱了某個 channel, 另外一個客戶端可以發佈訊息到這個 channel,<br>然後前面那個訂閱的客戶端就可以收到第二個客戶端發送過來的訊息了。在 Redis keyspace notification 的應用中，Redis 會負責發佈訊息到指定的 channel, 我們只要接收這些訊息就可以了。<br>後面會討論這些 channel。</p>\n<p>在使用 keyspace notification 前，需要先打開這個功能，編輯 redis.conf 將 notify-keyspace-events 設成：</p>\n<pre><code>notify-keyspace-events &quot;KEA&quot;\n</code></pre><p>根據官網的說明，<br>K - Keyspace events<br>E - Keyevent event<br>A - All commands<br>KEA 代表要訂閱所有命令類型的第一種和第二種事件。<br>更改設定檔要重啟 Redis 後才會生效。</p>\n<p>Redis 的事件通知是透過 PUB/SUB 來進行的，因此當上述兩種事件發生的時候，Redis 會分別發佈訊息到以下兩種 channel 上：</p>\n<pre><code>1. PUBLISH __keyspace@&lt;db id&gt;__:&lt;key name&gt; &lt;command type&gt;\n2. PUBLISH __keyevent@&lt;db id&gt;__:&lt;command type&gt; &lt;key name&gt; \n</code></pre><p>我們可以透過 PSUBSCRIBE 來訂閱這些事件：</p>\n<pre><code>1. PSUBSCRIBE __keyspace@*__:*\n2. PSUBSCRIBE __keyevent@*__:*\n</code></pre><p>假設我們要觀察 del test1 test2 test3 test4 指令對 keyspace 和 keyevent 的影響可以分別訂閱以下兩個 channel</p>\n<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) (integer) 1\n\n127.0.0.1:6379&gt; PSUBSCRIBE __keyevent@*__:del\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) (integer) 1\n</code></pre><p>設定要處理的 key</p>\n<pre><code>127.0.0.1:6379&gt; set test1 test1\nOK\n127.0.0.1:6379&gt; set test2 test2\nOK\n127.0.0.1:6379&gt; set test3 test3\nOK\n127.0.0.1:6379&gt; set test4 test4\n</code></pre><p>注意我這邊開了三個 terminal，分別執行三個 redis-cli，一個監聽對 test* 的異動，一個監聽 del 操作是否被執行，最後一個負責下各種指令。 </p>\n<p>在建立過程中，可以看到對 keyspace 的監聽訊息如下：</p>\n<pre><code>127.0.0.1:6379&gt; PSUBSCRIBE __keyspace@*__:test*\nReading messages... (press Ctrl-C to quit)\n1) &quot;psubscribe&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) (integer) 1\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test1&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test2&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test3&quot;\n4) &quot;set&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test4&quot;\n4) &quot;set&quot;\n</code></pre><p>注意 127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del 那個 redis-cli 沒有任何更新，因為沒有任何 del 操作被執行。<br>現在刪除 test, tests, test3, test4：</p>\n<pre><code>127.0.0.1:6379&gt; del test1 test2 test3 test4\n(integer) 4\n</code></pre><p>可以看到對 keyspace (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyspace@*</strong>:test*) 的監聽如下：</p>\n<pre><code>1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test1&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test2&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test3&quot;\n4) &quot;del&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyspace@*__:test*&quot;\n3) &quot;__keyspace@0__:test4&quot;\n4) &quot;del&quot;\n</code></pre><p>對 keyevent (127.0.0.1:6379&gt; PSUBSCRIBE <strong>keyevent@*</strong>:del)的監聽如下：</p>\n<pre><code>1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test1&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test2&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test3&quot;\n1) &quot;pmessage&quot;\n2) &quot;__keyevent@*__:del&quot;\n3) &quot;__keyevent@0__:del&quot;\n4) &quot;test4&quot;\n</code></pre><p>從上面的結果我們可以知道一個命令對多個 key 的操作，是會引發多次 keyspace 事件和 keyevent 事件的。<br>然後我們透過這些事件只能知道是甚麼 key 被影響、被甚麼指令影響，而不知道 key 被異動後的資料，如果想要知道 key 的最新資料則要自己再去讀取那個 key。</p>\n<h1 id=\"使用-Predis-在-PHP-中操作-Redis\"><a href=\"#使用-Predis-在-PHP-中操作-Redis\" class=\"headerlink\" title=\"使用 Predis 在 PHP 中操作 Redis\"></a>使用 Predis 在 PHP 中操作 Redis</h1><p>建立一個 redis-notify 專案</p>\n<pre><code>mkdir redis-notofy\n</code></pre><p>我們這邊使用 composer 來取得 Predis Async, 使用非同步版本的 Predis 比較適合這種監聽事件的任務。<br>關於 composer 的使用可以參考 <a href=\"https://getcomposer.org/\" title=\"Composer\">composer 官網說明文件</a>。<br>關於 Predis Async 的介紹可以參考 <a href=\"https://packagist.org/packages/predis/predis\">Predis Async</a>。</p>\n<p>在該專案內建立 composer.json 如下：</p>\n<pre><code>{\n  &quot;require&quot;:{&quot;predis/predis-async&quot;:&quot;dev-master&quot;}\n}\n</code></pre><p>執行  composer install  來從 Packagist 下載 Predis-Async</p>\n<pre><code>compsoer install\n</code></pre><p>可以開始用 Predis 了，編輯程式檔 notify.php 如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocalStorage</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $product_store = []; <span class=\"comment\">// 目前所有 products</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 使用前更新目前所有 products</div><div class=\"line\">     * <span class=\"doctag\">@param</span> \\Predis\\Client $client_sync</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">(\\Predis\\Client $client_sync)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">            <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">            preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">            $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 排序 product_store</span></div><div class=\"line\">        ksort(<span class=\"keyword\">$this</span>-&gt;product_store);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 判斷 id 是否在 product_store 內</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@return</span> bool</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">contains</span><span class=\"params\">($id)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id])) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理新增事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"新增 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $product;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理更改事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"更改 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] !== $product[<span class=\"string\">'name'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] !== $product[<span class=\"string\">'price'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] !== $product[<span class=\"string\">'stock'</span>]) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理刪除事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"刪除 product_store 項目:\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\\n\"</span>;</div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id]);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 顯示 product_store</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showStore</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;product_store <span class=\"keyword\">as</span> $id =&gt; $product) &#123;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"id: $id\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"name: &#123;$product['name']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"price: &#123;$product['price']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"stock: &#123;$product['stock']&#125;\\n\"</span>;</div><div class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"----------------------------------------------\\n\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$client = <span class=\"keyword\">new</span> Predis\\Async\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\"></div><div class=\"line\">$local_storage = <span class=\"keyword\">new</span> LocalStorage();</div><div class=\"line\">$local_storage-&gt;init($client_sync);</div><div class=\"line\">$local_storage-&gt;showStore();</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class=\"line\"> */</span></div><div class=\"line\">$client-&gt;connect(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($client)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class=\"line\">    $client-&gt;pubSubLoop([<span class=\"string\">'psubscribe'</span>=&gt;<span class=\"string\">'__keyspace@*__:product:*'</span>],</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($event, $pubsub)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/__keyspace@\\d+__:(product:(\\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class=\"line\">            $product_key = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            $product_id = $matches[<span class=\"number\">2</span>];</div><div class=\"line\">            <span class=\"comment\">// 取得被異動後，最新的 product 資料</span></div><div class=\"line\">            $product = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">            <span class=\"comment\">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class=\"line\">            $op = $event-&gt;payload;</div><div class=\"line\">            <span class=\"keyword\">if</span> ($op === <span class=\"string\">'del'</span>) &#123;</div><div class=\"line\">                $local_storage-&gt;deleteHandler($product_id, $product);</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($op === <span class=\"string\">'hset'</span>) &#123;</div><div class=\"line\">                <span class=\"comment\">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class=\"line\">                <span class=\"keyword\">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class=\"line\">                    $local_storage-&gt;updateHandler($product_id, $product);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                    $local_storage-&gt;insertHandler($product_id,$product);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 開始監聽 keyspace 異動事件</span></div><div class=\"line\">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure>\n<p>這個程式維護一個本地的商品清單，並且隨時接收 Redis 的最新異動來更新本地清單。<br>首先先建立一個 LocalStorage 物件來管理本地商品清單的增刪查改。<br>然後使用 Predis Async 來訂閱所有關於 product：* 的異動，<br>Redis 的 keyspace notification 對要監聽的每個 key 都建立一個 channel<br>要訂閱的 channel 樣式如下：</p>\n<pre><code>__keyspace@*__:product:*\n</code></pre><p>然後當資料異動事件發生的時候，可以取得 channel 的名稱和從 channel 傳遞過來的訊息：</p>\n<pre><code>channel 的名稱： __keyspace@0__:product:1\nchannel 的訊息： hset\n</code></pre><p>因此我們可以從 channel 的名稱取得被異動的 key 的名稱 product:1，當然也可以只取得部份的 key 名稱 1，來作為 id。<br>然後可以從 channel 傳遞過來的訊息得知是甚麼操作異動了 key，這裡是 hset。<br>關於各種類型的操作會傳遞甚麼訊息可以查看官網的說明 <a href=\"http://redis.io/topics/notifications\" title=\"Redis Keyspace Notifications\">官網說明文件</a>。<br>詳細的程式可以在 <a href=\"https://github.com/smjhang/demos\">我的 github 上的 demos 專案</a> 下載，放在 redis-notify 資料夾內。</p>\n<p>執行程式可以看到以下結果：</p>\n<pre><code>simon@simon:~/demos/redis-notify$ php notify.php \nid: 1\nname: 多力多滋組合包-綜合 54g*4包/組\nprice: 55\nstock: 256\n----------------------------------------------\nid: 2\nname: 【洋芋片】Lays樂事瑞士香濃起司 97g/包\nprice: 32\nstock: 179\n----------------------------------------------\nid: 3\nname: 【蔓莓纖果】萬歲牌蔓莓纖果150G\nprice: 59\nstock: 326\n----------------------------------------------\nid: 4\nname: 【蒜香青豆】盛香珍蒜香青豆 240g/包\nprice: 42\nstock: 324\n----------------------------------------------\nid: 5\nname: 【義美】義美小泡芙（檸檬風味）171g/盒\nprice: 64\nstock: 64\n----------------------------------------------\nid: 6\nname: 【洋芋片】波的多超厚切洋芋片-蚵仔煎味\nprice: 53\nstock: 182\n----------------------------------------------\nid: 7\nname: 【義美】義美小蛋卷（原味）\nprice: 49\nstock: 313\n----------------------------------------------\nid: 8\nname: 品客碳烤BBQ口味洋芋片\nprice: 55\nstock: 158\n----------------------------------------------\n</code></pre><p>另外開一個 Redis client 來異動資料：</p>\n<pre><code>simon@simon:~/demos$ redis-cli\n127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 79\nOK\n127.0.0.1:6379&gt; HMSET product:9 name &apos;旺旺 仙貝經濟包&apos; price 469 stock 75\nOK\n127.0.0.1:6379&gt; DEL product:9\n(integer) 1\n127.0.0.1:6379&gt; \n</code></pre><p>可以在 notify.php 的輸出畫面看到新的訊息：</p>\n<pre><code>新增 product_store 項目:\nid: 9\nname: 旺旺 仙貝經濟包\nprice: 469\nstock: 79\n\n更改 product_store 項目:\nid: 9\nstock: 75\n\n刪除 product_store 項目:\nid: 9\n</code></pre><h1 id=\"結論\"><a href=\"#結論\" class=\"headerlink\" title=\"結論\"></a>結論</h1><p>這邊介紹 Redis 如何實現資料異動通知的功能。不過要注意的是 Redis 不會保存通知過的訊息，因此如果對 Redis 的連線斷線的話，斷線的應用程式是無法再取得斷線期間的異動通知。<br>如果非常在意事件一定要通知到的話，要自己想辦法把事件保留起來，官網上說未來 Redis 可能會將這些通知保留再另外的 SET 內，不過現階段還沒有，可能要自己實作保存事件的部份。</p>"},{"title":"HTML5 Server Send Event","date":"2016-09-08T14:49:42.000Z","_content":"# 簡介\nHTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。\n而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。\n因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 [Redis Notification][1] 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。\n[1]: /2016/07/27/redis-notification/\n<!-- more -->\n\n# HTML5 Server Send Event (SSE)\n實作 SSE 有三個要點，首先是伺服器端的網頁程式必須要發送 SSE 專屬的內容類型，然後是傳輸的內容必須依照 SSE 的格式撰寫，最後是瀏覽器接收到訊息後的處理。\n## 伺服器端 PHP 程式範例\n```php\n<?php\n# 將回傳的內容類型指定為 text/event-stream\nheader('Content-Type: text/event-stream');\n# 避免瀏覽器快取 SSE 訊息，以保證最新的資訊能被接收到\nheader('Cache-Control: no-cache'); \n\n/**\n * 將要回傳的訊息整理程指定的格式並輸出\n *\n * @param string $data 要送出的資料\n */\nfunction sendData($data) {\n  echo \"data: $data \\n\\n\";\n  // 避免 PHP 緩衝輸出，讓資料能夠即時輸出\n  ob_flush();\n  flush();\n}\n\nwhile (1) {\n    $serverTime = time();\n    sendData('server time: ' . date(\"h:i:s\", time()));\n    // 避免輸出太快\n    sleep(1);\n}\n```\n## 資料格式\nSSE 的每個訊息由以下欄位構成：\nevent - 如果該訊息是一個事件通知，則此欄位代表事件的名稱，非必要欄位。\ndata - 訊息的資訊，必要欄位，一個訊息可以有多個 data 欄位。\nid - 指定訊息的 id，可以讓接收者辨識目前的訊息，以便了解當前接收進度，非必要欄位。\nretry - 指定從該訊息後，當瀏覽器斷線時，重新連接的間格時間，單位是毫秒，非必要欄位。\n其中每個欄位以一個換行符號 \\n 分隔，而每個訊息最後以兩個換行符號分隔。\n範例：\n```\nevent: userconnect\ndata: {\"username\": \"bobby\", \"time\": \"02:33:48\"}\n\ndata: Here's a system message of some kind that will get used\ndata: to accomplish some task.\n\nevent: usermessage\ndata: {\"username\": \"bobby\", \"time\": \"02:34:11\", \"text\": \"Hi everyone.\"}\n\n```\n## 瀏覽器端程式範例\n```HTML\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n</head>\n<body>\n  <script>\n    // 設定發送 SSE 訊息的伺服器端程式的 URL\n    var source = new EventSource('server.php');\n    // 設定當沒有指定 event 的 SSE 訊息發送過來時的處理函數\n    source.onmessage = function(e) {\n      document.body.innerHTML += e.data + '<br>';\n    };\n    // 設定當 event 欄位的值是 usermessage 的 SSE 訊息發送過來時的處理函數\n    source.addEventListener('usermessage', function(e) {\n      var data = JSON.parse(e.data);\n      console.log(data.msg);\n    }, false);\n    \n  </script>\n</body>\n</html>\n```\n詳細的 EventSource 用法可參考 [Using server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)\n\n# Redis Notification 即時顯示\n在 [Redis Notification][1] 中展示了將 Redis 的異動通知 PHP 程式的技術，現在要應用 SSE 進一步將異動傳達給客戶端。\n首先將伺服器端的程式 notify.php 改寫為可以發送 SSE 訊息的程式，將原本的輸出轉換成 SSE 格式並停用輸出緩衝，還要注意 Web Server 如果會緩衝輸出也要先停用。\n改寫後的程式 getUpdates.php 如下：\n```php\n<?php\n/**\n * Author: simon\n */\nrequire __DIR__.'/vendor/autoload.php';\n\nclass LocalStorage\n{\n    private $product_store = []; // 目前所有 products\n\n    /**\n     * 使用前更新目前所有 products\n     * @param \\Predis\\Client $client_sync\n     */\n    public function init(\\Predis\\Client $client_sync)\n    {\n        $all_product_keys = $client_sync->keys('product:*');\n        foreach ($all_product_keys as $product_key) {\n            // 抓取 id\n            preg_match('/product:(\\d+)/', $product_key, $matches);\n            $id = $matches[1];\n            // 設定 id=>product 關聯\n            $this->product_store[$id] = $client_sync->hgetall($product_key);\n        }\n        // 排序 product_store\n        ksort($this->product_store);\n    }\n\n    /**\n     * 判斷 id 是否在 product_store 內\n     * @param $id\n     * @return bool\n     */\n    public function contains($id)\n    {\n        if (isset($this->product_store[$id])) {\n            return true;\n        }\n        return false;\n    }\n    \n    /**\n     * 處理新增事件\n     * @param $id\n     * @param $product\n     */\n    function insertHandler($id, $product)\n    {\n        echo \"event: add\" . PHP_EOL;\n        echo 'data: {\"id\": \"'.$id.'\", \"name\": \"'.$product['name'].'\", \"price\": \"'.$product['price'].'\", \"stock\": \"'.$product['stock'].'\"}';\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n        $this->product_store[$id] = $product;\n    }\n    \n    /**\n     * 處理更改事件\n     * @param $id\n     * @param $product\n     */\n    function updateHandler($id, $product)\n    {\n        $data = [];\n        $data['id'] = $id;\n        if ($this->product_store[$id]['name'] !== $product['name']) {\n            $data['name'] = $product['name'];\n            $this->product_store[$id]['name'] = $product['name'];\n        }\n        if ($this->product_store[$id]['price'] !== $product['price']) {\n            $data['price'] = $product['price'];\n            $this->product_store[$id]['price'] = $product['price'];\n        }\n        if ($this->product_store[$id]['stock'] !== $product['stock']) {\n            $data['stock'] = $product['stock'];\n            $this->product_store[$id]['stock'] = $product['stock'];\n        }\n        echo \"event: update\".PHP_EOL;\n        echo \"data: \";\n        echo json_encode($data);\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n    }\n\n    /**\n     * 處理刪除事件\n     * @param $id\n     * @param $product\n     */\n    function deleteHandler($id, $product)\n    {\n        $product = $this->product_store[$id];\n        $data = [];\n        $data['id'] = $id;\n        $data['name'] = $product['name'];\n        $data['price'] = $product['price'];\n        $data['stock'] = $product['stock'];\n        echo \"event: delete\".PHP_EOL;\n        echo \"data: \";\n        echo json_encode($data);\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n        unset($this->product_store[$id]);\n    }\n}\n$client = new Predis\\Async\\Client('tcp://127.0.0.1:6379');\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n\n$local_storage = new LocalStorage();\n$local_storage->init($client_sync);\n\nheader(\"Content-Type: text/event-stream\"); // 設定 Server Send Event 的 Content-Type\nheader(\"Cache-Control: no-cache\"); // 避免瀏覽器快取 Server Send Event 的內容\nheader(\"X-Accel-Buffering: no\"); // 停用 Nginx 輸出緩衝控制\n\n\n/**\n * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理\n */\n$client->connect(function ($client) use ($client_sync, $local_storage) {\n\n    // 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件\n    $client->pubSubLoop(['psubscribe'=>'__keyspace@*__:product:*'],\n        function ($event, $pubsub) use ($client_sync, $local_storage) {\n            // 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id\n            if (preg_match('/__keyspace@\\d+__:(product:(\\d+))/', $event->channel, $matches)) {\n                $product_key = $matches[1];\n                $product_id = $matches[2];\n                // 取得被異動後，最新的 product 資料\n                $product = $client_sync->hgetall($product_key);\n                // 根據事件傳來的訊息得知操作 key 的類型\n                $op = $event->payload;\n                if ($op === 'del') {\n                    $local_storage->deleteHandler($product_id, $product);\n                } else if ($op === 'hset') {\n                    // 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改\n                    if ($local_storage->contains($product_id)) {\n                        $local_storage->updateHandler($product_id, $product);\n                    } else {\n                        $local_storage->insertHandler($product_id,$product);\n                    }\n                }\n                if ($op === 'quit') {\n                    $pubsub->quit();\n                }\n            }\n        });\n});\n// 開始監聽 keyspace 異動事件\n$client->getEventLoop()->run();\n\n```\n為了要讓後來連線的程式能 follow 目前最新的結果，需要有一隻程式 getProductList.php 可以顯示目前最新的產品清單如下：\n\n```php\n<?php\n/**\n * Author: simon\n */\nrequire __DIR__.'/vendor/autoload.php';\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n$all_product_keys = $client_sync->keys('product:*');\n$product_store = [];\nforeach ($all_product_keys as $product_key) {\n    // 抓取 id\n    preg_match('/product:(\\d+)/', $product_key, $matches);\n    $id = $matches[1];\n    // 設定 id=>product 關聯\n    $product_store[$id] = $client_sync->hgetall($product_key);\n}\n$output = [];\nforeach ($product_store as $id => $product) {\n    $output[] = [\"id\" => $id, \"name\" => $product['name'], \"price\" => $product['price'], \"stock\" => $product['stock']];\n}\necho json_encode($output);\n```\n現在可以開始寫瀏覽器端的程式了，需要的程式檔案列表如下：\n\n|file name                            | description                                     |\n|-------------------------------------|-------------------------------------------------|\n|main.js                              | 負責整合各部分程式碼並操作 DOM                       |\n|ProductList.js                       | 負責管理商品清單的資料                              |\n|ProductListException.js              | 負責通知其他程式 ProductList 發生異常                |\n|ServerSendEventHandler.js            | 負責處理產品清單異動的事件                            |\n|ServerSendEventHandlerException.js   | 負責通知其他程式 ServerSendEventHandler 發生異常      |\n\nmain.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\nimport ServerSendEventHandler from './ServerSendEventHandler.js';\nimport ProductList from './ProductList.js';\n\nwindow.onload = function () {\n    let product_list = new ProductList();\n    let sse_handler = new ServerSendEventHandler();\n    // 新連線的頁面先更新最新產品清單\n    product_list.loadList('./getProductList.php');\n    // 將產品清單的資訊顯示在頁面上\n    let tbody = document.getElementById(\"product_list\");\n    makeTableFromProductList(tbody, product_list.getProductList());\n    // 設定當產品異動時要進行的各種處理，這邊主要是更新產品清單資料 product_list 和修改頁面上顯示的資訊\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(undefined, tbody));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(undefined, tbody));\n    // 開始監聽產品異動事件並進行相應處理\n    sse_handler.listen(\"./getUpdates.php\");\n};\n\n/**\n * 顯示產品清單\n * @param tbody\n * @param product_list\n */\nfunction makeTableFromProductList (tbody, product_list) {\n    let docfrag = document.createDocumentFragment();\n    product_list.forEach(product => insertRow(docfrag, product));\n    tbody.appendChild(docfrag);\n}\n\n/**\n * 插入產品\n * @param tbody\n * @param product\n */\nfunction insertRow (tbody, product) {\n    let tr = document.createElement(\"tr\");\n    let {id, name, price, stock} = product;\n    tr.setAttribute('id', id);\n    let td_name = document.createElement('td');\n    let td_price = document.createElement('td');\n    let td_stock = document.createElement('td');\n    td_name.textContent = name;\n    td_name.setAttribute('name','name');\n    td_price.textContent = price;\n    td_price.setAttribute('name','price');\n    td_stock.textContent = stock;\n    td_stock.setAttribute('name','stock');\n    tr.appendChild(td_name);\n    tr.appendChild(td_price);\n    tr.appendChild(td_stock);\n    tbody.appendChild(tr);\n}\n\n/**\n * 更新產品\n * @param product\n */\nfunction updateRow (product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr === null) {\n        return;\n    }\n    for (let key in product) {\n        if (Object.prototype.hasOwnProperty.call(product, key)) {\n            let updating_td = tr.querySelector(`td[name=\"${key}\"]`);\n            if (updating_td !== null) {\n                updating_td.textContent = product[key];\n            }\n        }\n    }\n}\n\n/**\n * 刪除產品\n * @param tbody\n * @param product\n */\nfunction deleteRow (tbody, product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr !== null) {\n        tbody.removeChild(tr);\n    }\n}\n```\nProductList.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\nimport ProductListException from './ProductListException.js';\n/**\n * 維護本地產品列表的物件\n */\nexport default class ProductList {\n    constructor () {\n        this.product_list = [];\n    }\n\n    /**\n     * 從 Server 取得目前所有產品列表\n     * @param url Server Url\n     */\n    loadList (url) {\n        try {\n            let xhr = new XMLHttpRequest();\n            // 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr\n            xhr.open(\"GET\", url, false);\n            xhr.send();\n            let result = JSON.parse(xhr.responseText);\n            this.product_list = result;\n            return result;\n        } catch (e) {\n            throw new ProductListException(`Error #1: Cannot load product list from remote server: ${url}.`)\n        }\n    }\n\n    /**\n     * 取得產品列表\n     * @returns {Array|*}\n     */\n    getProductList () {\n        return this.product_list;\n    }\n\n    /**\n     * 增加產品\n     * @param item\n     */\n    addItem (item) {\n         this.product_list.push(item);\n    }\n\n    /**\n     * 刪除產品\n     * @param deleting_item\n     */\n    deleteItemById (deleting_item) {\n        let index = this.product_list.findIndex(item => deleting_item.id === item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #2: Delete product error, not such product id: ${deleting_item.id}.`);\n        }\n        this.product_list.splice(index,1);\n    }\n\n    /**\n     * 更新產品\n     * @param updating_item\n     */\n    updateItem (updating_item) {\n        let index = this.product_list.findIndex(item => item.id === updating_item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #3: Update product error, not such product id: ${updating_item.id}.`);\n        }\n        // 更新產品部分資訊\n        for (let prop in updating_item) {\n            if (Object.prototype.hasOwnProperty.call(updating_item, prop)) {\n                this.product_list[index][prop] = updating_item[prop];\n            }\n        }\n    }\n}\n\n```\nProductListException.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ProductList 專屬 Exception\n */\nexport default class ProductListException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n```\nServerSendEventHandler.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\nimport ServerSendEventHandlerException from './ServerSendEventHandlerException.js';\n\nconst ADD = 0; // 產品新增事件代碼\nconst UPDATE = 1; // 產品修改事件代碼\nconst DELETE = 2; // 產品刪除事件代碼\n/**\n * Server Send Event 處理物件\n */\nexport default class ServerSendEventHandler {\n    constructor () {\n        this.update_events = [];\n        this.delete_events = [];\n        this.add_events = [];\n    }\n\n    /**\n     * 取得產品新增事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get ADD () {\n        return ADD;\n    }\n\n    /**\n     * 取得產品修改事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get UPDATE () {\n        return UPDATE;\n    }\n\n    /**\n     * 取得產品刪除事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get DELETE () {\n        return DELETE;\n    }\n\n    /**\n     * 開始監聽 Server Send Event 並進行處理\n     * @param url\n     */\n    listen (url) {\n        if ([this.update_events.length, this.delete_events.length, this.add_events.length].includes(0)) {\n            throw new ServerSendEventHandlerException(`Error #2: Event handlers must be specified before listing event.`);\n        }\n        let event_source = new EventSource(url);\n        event_source.addEventListener('add',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.add_events.forEach( event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('update',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.update_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('delete', (e) => {\n            let response_data = JSON.parse(e.data);\n            this.delete_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.onerror = (e) => {\n            throw new ServerSendEventHandlerException(`Error #4: Server send event failed: ${e}.`);\n        };\n    }\n\n    /**\n     * 附加事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    addEventHandler (event_type, event_handler) {\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                this.add_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                this.update_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.DELETE:\n                this.delete_events.push(event_handler);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n\n    /**\n     * 移除事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    removeEventHandler (event_type, event_handler) {\n        let index;\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                index = this.add_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.add_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                index = this.update_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.update_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.DELETE:\n                index = this.delete_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.delete_events.splice(index, 1);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n}\n```\nServerSendEventHandlerException.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ServerSendEventHandler 專屬 Exception\n */\nexport default class ServerSendEventHandlerException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n```\n為了讓 ECMAScript 2015 的程式碼能夠順利在瀏覽器上執行，我使用了 [Babel](https://babeljs.io/) 和 [webpack](https://webpack.github.io/) 將這些 js 轉成 ECMAScript 5 並整合成一個 bundle.js 檔案給 main.html 載入。\n\n最後的主要進入頁面如下 main.html:\n```HTML\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <script src=\"bundle.js\"></script>\n</head>\n<body>\n<table>\n    <thead>\n    <tr><th>產品名稱</th><th>價格</th><th>庫存</th></tr>\n    </thead>\n    <tbody id=\"product_list\">\n    </tbody>\n</table>\n</body>\n</html>\n```\n整個專案的程式可以再 [GitHub](https://github.com/smjhang/demos/tree/master/server-send-event)下載。\n\n## 開始測試\n首先在 Redis 插入起始資料:\n```\nHMSET product:1 name '芭樂'   price 5 stock 99\nHMSET product:2 name '西瓜'   price 5 stock 99\nHMSET product:3 name '蓮霧'   price 5 stock 99\nHMSET product:4 name '鳳梨'   price 5 stock 99\nHMSET product:5 name '蘋果'   price 5 stock 99\nHMSET product:6 name '奇異果' price 5 stock 99\nHMSET product:7 name '香蕉'   price 5 stock 99\nHMSET product:8 name '荔枝'   price 5 stock 99\n```\n\n進入頁面:\n{% asset_img main.jpg 第一次進入 %}\n\n在 Redis 新增資料:\n```\nHMSET product:9 name '小玉西瓜' price 15 stock 79\n```\n\n查看頁面:\n{% asset_img insert.jpg 新增資料 %}\n\n在 Redis 修改資料:\n```\nHMSET product:9 name '小玉西瓜' price 15 stock 75\n```\n\n查看頁面:\n{% asset_img update.jpg 修改資料 %}\n\n在 Redis 刪除資料:\n```\nDEL product:9\n```\n\n查看頁面:\n{% asset_img delete.jpg 刪除資料 %}\n\n# 小結\n沿續了 [Redis Notification][1] 一文中關於 Redis 推送資料的範例，本篇進一步使用 SSE 將此資料異動通知給瀏覽器，並且嘗試使用 ES 20015 來進行開發。從測試結果可以看到 SSE 確實能即時通知瀏覽器最新的資訊。\n雖然 SSE 可以沿用網頁伺服器而不需要自行開發伺服器程式，但是對於 SSE 的運作原理還是要有足夠深入了解，才能了解應該如何設定網頁伺服器，並且注意到許多安全性以及系統架構上的問題。\n在投入正式產品環境之前，還是要再經過謹慎的評估和測試才能運用。","source":"_posts/server-send-event.md","raw":"---\ntitle: HTML5 Server Send Event\ndate: 2016-09-08 22:49:42\ntags: \n- HTML5\n- ES2015\n\n---\n# 簡介\nHTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。\n而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。\n因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 [Redis Notification][1] 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。\n[1]: /2016/07/27/redis-notification/\n<!-- more -->\n\n# HTML5 Server Send Event (SSE)\n實作 SSE 有三個要點，首先是伺服器端的網頁程式必須要發送 SSE 專屬的內容類型，然後是傳輸的內容必須依照 SSE 的格式撰寫，最後是瀏覽器接收到訊息後的處理。\n## 伺服器端 PHP 程式範例\n```php\n<?php\n# 將回傳的內容類型指定為 text/event-stream\nheader('Content-Type: text/event-stream');\n# 避免瀏覽器快取 SSE 訊息，以保證最新的資訊能被接收到\nheader('Cache-Control: no-cache'); \n\n/**\n * 將要回傳的訊息整理程指定的格式並輸出\n *\n * @param string $data 要送出的資料\n */\nfunction sendData($data) {\n  echo \"data: $data \\n\\n\";\n  // 避免 PHP 緩衝輸出，讓資料能夠即時輸出\n  ob_flush();\n  flush();\n}\n\nwhile (1) {\n    $serverTime = time();\n    sendData('server time: ' . date(\"h:i:s\", time()));\n    // 避免輸出太快\n    sleep(1);\n}\n```\n## 資料格式\nSSE 的每個訊息由以下欄位構成：\nevent - 如果該訊息是一個事件通知，則此欄位代表事件的名稱，非必要欄位。\ndata - 訊息的資訊，必要欄位，一個訊息可以有多個 data 欄位。\nid - 指定訊息的 id，可以讓接收者辨識目前的訊息，以便了解當前接收進度，非必要欄位。\nretry - 指定從該訊息後，當瀏覽器斷線時，重新連接的間格時間，單位是毫秒，非必要欄位。\n其中每個欄位以一個換行符號 \\n 分隔，而每個訊息最後以兩個換行符號分隔。\n範例：\n```\nevent: userconnect\ndata: {\"username\": \"bobby\", \"time\": \"02:33:48\"}\n\ndata: Here's a system message of some kind that will get used\ndata: to accomplish some task.\n\nevent: usermessage\ndata: {\"username\": \"bobby\", \"time\": \"02:34:11\", \"text\": \"Hi everyone.\"}\n\n```\n## 瀏覽器端程式範例\n```HTML\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n</head>\n<body>\n  <script>\n    // 設定發送 SSE 訊息的伺服器端程式的 URL\n    var source = new EventSource('server.php');\n    // 設定當沒有指定 event 的 SSE 訊息發送過來時的處理函數\n    source.onmessage = function(e) {\n      document.body.innerHTML += e.data + '<br>';\n    };\n    // 設定當 event 欄位的值是 usermessage 的 SSE 訊息發送過來時的處理函數\n    source.addEventListener('usermessage', function(e) {\n      var data = JSON.parse(e.data);\n      console.log(data.msg);\n    }, false);\n    \n  </script>\n</body>\n</html>\n```\n詳細的 EventSource 用法可參考 [Using server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)\n\n# Redis Notification 即時顯示\n在 [Redis Notification][1] 中展示了將 Redis 的異動通知 PHP 程式的技術，現在要應用 SSE 進一步將異動傳達給客戶端。\n首先將伺服器端的程式 notify.php 改寫為可以發送 SSE 訊息的程式，將原本的輸出轉換成 SSE 格式並停用輸出緩衝，還要注意 Web Server 如果會緩衝輸出也要先停用。\n改寫後的程式 getUpdates.php 如下：\n```php\n<?php\n/**\n * Author: simon\n */\nrequire __DIR__.'/vendor/autoload.php';\n\nclass LocalStorage\n{\n    private $product_store = []; // 目前所有 products\n\n    /**\n     * 使用前更新目前所有 products\n     * @param \\Predis\\Client $client_sync\n     */\n    public function init(\\Predis\\Client $client_sync)\n    {\n        $all_product_keys = $client_sync->keys('product:*');\n        foreach ($all_product_keys as $product_key) {\n            // 抓取 id\n            preg_match('/product:(\\d+)/', $product_key, $matches);\n            $id = $matches[1];\n            // 設定 id=>product 關聯\n            $this->product_store[$id] = $client_sync->hgetall($product_key);\n        }\n        // 排序 product_store\n        ksort($this->product_store);\n    }\n\n    /**\n     * 判斷 id 是否在 product_store 內\n     * @param $id\n     * @return bool\n     */\n    public function contains($id)\n    {\n        if (isset($this->product_store[$id])) {\n            return true;\n        }\n        return false;\n    }\n    \n    /**\n     * 處理新增事件\n     * @param $id\n     * @param $product\n     */\n    function insertHandler($id, $product)\n    {\n        echo \"event: add\" . PHP_EOL;\n        echo 'data: {\"id\": \"'.$id.'\", \"name\": \"'.$product['name'].'\", \"price\": \"'.$product['price'].'\", \"stock\": \"'.$product['stock'].'\"}';\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n        $this->product_store[$id] = $product;\n    }\n    \n    /**\n     * 處理更改事件\n     * @param $id\n     * @param $product\n     */\n    function updateHandler($id, $product)\n    {\n        $data = [];\n        $data['id'] = $id;\n        if ($this->product_store[$id]['name'] !== $product['name']) {\n            $data['name'] = $product['name'];\n            $this->product_store[$id]['name'] = $product['name'];\n        }\n        if ($this->product_store[$id]['price'] !== $product['price']) {\n            $data['price'] = $product['price'];\n            $this->product_store[$id]['price'] = $product['price'];\n        }\n        if ($this->product_store[$id]['stock'] !== $product['stock']) {\n            $data['stock'] = $product['stock'];\n            $this->product_store[$id]['stock'] = $product['stock'];\n        }\n        echo \"event: update\".PHP_EOL;\n        echo \"data: \";\n        echo json_encode($data);\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n    }\n\n    /**\n     * 處理刪除事件\n     * @param $id\n     * @param $product\n     */\n    function deleteHandler($id, $product)\n    {\n        $product = $this->product_store[$id];\n        $data = [];\n        $data['id'] = $id;\n        $data['name'] = $product['name'];\n        $data['price'] = $product['price'];\n        $data['stock'] = $product['stock'];\n        echo \"event: delete\".PHP_EOL;\n        echo \"data: \";\n        echo json_encode($data);\n        echo PHP_EOL.PHP_EOL;\n        ob_flush();\n        flush();\n        unset($this->product_store[$id]);\n    }\n}\n$client = new Predis\\Async\\Client('tcp://127.0.0.1:6379');\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n\n$local_storage = new LocalStorage();\n$local_storage->init($client_sync);\n\nheader(\"Content-Type: text/event-stream\"); // 設定 Server Send Event 的 Content-Type\nheader(\"Cache-Control: no-cache\"); // 避免瀏覽器快取 Server Send Event 的內容\nheader(\"X-Accel-Buffering: no\"); // 停用 Nginx 輸出緩衝控制\n\n\n/**\n * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理\n */\n$client->connect(function ($client) use ($client_sync, $local_storage) {\n\n    // 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件\n    $client->pubSubLoop(['psubscribe'=>'__keyspace@*__:product:*'],\n        function ($event, $pubsub) use ($client_sync, $local_storage) {\n            // 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id\n            if (preg_match('/__keyspace@\\d+__:(product:(\\d+))/', $event->channel, $matches)) {\n                $product_key = $matches[1];\n                $product_id = $matches[2];\n                // 取得被異動後，最新的 product 資料\n                $product = $client_sync->hgetall($product_key);\n                // 根據事件傳來的訊息得知操作 key 的類型\n                $op = $event->payload;\n                if ($op === 'del') {\n                    $local_storage->deleteHandler($product_id, $product);\n                } else if ($op === 'hset') {\n                    // 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改\n                    if ($local_storage->contains($product_id)) {\n                        $local_storage->updateHandler($product_id, $product);\n                    } else {\n                        $local_storage->insertHandler($product_id,$product);\n                    }\n                }\n                if ($op === 'quit') {\n                    $pubsub->quit();\n                }\n            }\n        });\n});\n// 開始監聽 keyspace 異動事件\n$client->getEventLoop()->run();\n\n```\n為了要讓後來連線的程式能 follow 目前最新的結果，需要有一隻程式 getProductList.php 可以顯示目前最新的產品清單如下：\n\n```php\n<?php\n/**\n * Author: simon\n */\nrequire __DIR__.'/vendor/autoload.php';\n$client_sync = new Predis\\Client('tcp://127.0.0.1:6379');\n$all_product_keys = $client_sync->keys('product:*');\n$product_store = [];\nforeach ($all_product_keys as $product_key) {\n    // 抓取 id\n    preg_match('/product:(\\d+)/', $product_key, $matches);\n    $id = $matches[1];\n    // 設定 id=>product 關聯\n    $product_store[$id] = $client_sync->hgetall($product_key);\n}\n$output = [];\nforeach ($product_store as $id => $product) {\n    $output[] = [\"id\" => $id, \"name\" => $product['name'], \"price\" => $product['price'], \"stock\" => $product['stock']];\n}\necho json_encode($output);\n```\n現在可以開始寫瀏覽器端的程式了，需要的程式檔案列表如下：\n\n|file name                            | description                                     |\n|-------------------------------------|-------------------------------------------------|\n|main.js                              | 負責整合各部分程式碼並操作 DOM                       |\n|ProductList.js                       | 負責管理商品清單的資料                              |\n|ProductListException.js              | 負責通知其他程式 ProductList 發生異常                |\n|ServerSendEventHandler.js            | 負責處理產品清單異動的事件                            |\n|ServerSendEventHandlerException.js   | 負責通知其他程式 ServerSendEventHandler 發生異常      |\n\nmain.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\nimport ServerSendEventHandler from './ServerSendEventHandler.js';\nimport ProductList from './ProductList.js';\n\nwindow.onload = function () {\n    let product_list = new ProductList();\n    let sse_handler = new ServerSendEventHandler();\n    // 新連線的頁面先更新最新產品清單\n    product_list.loadList('./getProductList.php');\n    // 將產品清單的資訊顯示在頁面上\n    let tbody = document.getElementById(\"product_list\");\n    makeTableFromProductList(tbody, product_list.getProductList());\n    // 設定當產品異動時要進行的各種處理，這邊主要是更新產品清單資料 product_list 和修改頁面上顯示的資訊\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(undefined, tbody));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));\n    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(undefined, tbody));\n    // 開始監聽產品異動事件並進行相應處理\n    sse_handler.listen(\"./getUpdates.php\");\n};\n\n/**\n * 顯示產品清單\n * @param tbody\n * @param product_list\n */\nfunction makeTableFromProductList (tbody, product_list) {\n    let docfrag = document.createDocumentFragment();\n    product_list.forEach(product => insertRow(docfrag, product));\n    tbody.appendChild(docfrag);\n}\n\n/**\n * 插入產品\n * @param tbody\n * @param product\n */\nfunction insertRow (tbody, product) {\n    let tr = document.createElement(\"tr\");\n    let {id, name, price, stock} = product;\n    tr.setAttribute('id', id);\n    let td_name = document.createElement('td');\n    let td_price = document.createElement('td');\n    let td_stock = document.createElement('td');\n    td_name.textContent = name;\n    td_name.setAttribute('name','name');\n    td_price.textContent = price;\n    td_price.setAttribute('name','price');\n    td_stock.textContent = stock;\n    td_stock.setAttribute('name','stock');\n    tr.appendChild(td_name);\n    tr.appendChild(td_price);\n    tr.appendChild(td_stock);\n    tbody.appendChild(tr);\n}\n\n/**\n * 更新產品\n * @param product\n */\nfunction updateRow (product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr === null) {\n        return;\n    }\n    for (let key in product) {\n        if (Object.prototype.hasOwnProperty.call(product, key)) {\n            let updating_td = tr.querySelector(`td[name=\"${key}\"]`);\n            if (updating_td !== null) {\n                updating_td.textContent = product[key];\n            }\n        }\n    }\n}\n\n/**\n * 刪除產品\n * @param tbody\n * @param product\n */\nfunction deleteRow (tbody, product) {\n    let id = product.id;\n    let tr = document.getElementById(id);\n    if (tr !== null) {\n        tbody.removeChild(tr);\n    }\n}\n```\nProductList.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\nimport ProductListException from './ProductListException.js';\n/**\n * 維護本地產品列表的物件\n */\nexport default class ProductList {\n    constructor () {\n        this.product_list = [];\n    }\n\n    /**\n     * 從 Server 取得目前所有產品列表\n     * @param url Server Url\n     */\n    loadList (url) {\n        try {\n            let xhr = new XMLHttpRequest();\n            // 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr\n            xhr.open(\"GET\", url, false);\n            xhr.send();\n            let result = JSON.parse(xhr.responseText);\n            this.product_list = result;\n            return result;\n        } catch (e) {\n            throw new ProductListException(`Error #1: Cannot load product list from remote server: ${url}.`)\n        }\n    }\n\n    /**\n     * 取得產品列表\n     * @returns {Array|*}\n     */\n    getProductList () {\n        return this.product_list;\n    }\n\n    /**\n     * 增加產品\n     * @param item\n     */\n    addItem (item) {\n         this.product_list.push(item);\n    }\n\n    /**\n     * 刪除產品\n     * @param deleting_item\n     */\n    deleteItemById (deleting_item) {\n        let index = this.product_list.findIndex(item => deleting_item.id === item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #2: Delete product error, not such product id: ${deleting_item.id}.`);\n        }\n        this.product_list.splice(index,1);\n    }\n\n    /**\n     * 更新產品\n     * @param updating_item\n     */\n    updateItem (updating_item) {\n        let index = this.product_list.findIndex(item => item.id === updating_item.id);\n        if (index === -1) {\n            throw new ProductListException(`Error #3: Update product error, not such product id: ${updating_item.id}.`);\n        }\n        // 更新產品部分資訊\n        for (let prop in updating_item) {\n            if (Object.prototype.hasOwnProperty.call(updating_item, prop)) {\n                this.product_list[index][prop] = updating_item[prop];\n            }\n        }\n    }\n}\n\n```\nProductListException.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ProductList 專屬 Exception\n */\nexport default class ProductListException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n```\nServerSendEventHandler.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\nimport ServerSendEventHandlerException from './ServerSendEventHandlerException.js';\n\nconst ADD = 0; // 產品新增事件代碼\nconst UPDATE = 1; // 產品修改事件代碼\nconst DELETE = 2; // 產品刪除事件代碼\n/**\n * Server Send Event 處理物件\n */\nexport default class ServerSendEventHandler {\n    constructor () {\n        this.update_events = [];\n        this.delete_events = [];\n        this.add_events = [];\n    }\n\n    /**\n     * 取得產品新增事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get ADD () {\n        return ADD;\n    }\n\n    /**\n     * 取得產品修改事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get UPDATE () {\n        return UPDATE;\n    }\n\n    /**\n     * 取得產品刪除事件代碼\n     * @returns {number}\n     * @constructor\n     */\n    static get DELETE () {\n        return DELETE;\n    }\n\n    /**\n     * 開始監聽 Server Send Event 並進行處理\n     * @param url\n     */\n    listen (url) {\n        if ([this.update_events.length, this.delete_events.length, this.add_events.length].includes(0)) {\n            throw new ServerSendEventHandlerException(`Error #2: Event handlers must be specified before listing event.`);\n        }\n        let event_source = new EventSource(url);\n        event_source.addEventListener('add',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.add_events.forEach( event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('update',  (e) => {\n            let response_data = JSON.parse(e.data);\n            this.update_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.addEventListener('delete', (e) => {\n            let response_data = JSON.parse(e.data);\n            this.delete_events.forEach(event_handler => event_handler(response_data));\n        }, false);\n        event_source.onerror = (e) => {\n            throw new ServerSendEventHandlerException(`Error #4: Server send event failed: ${e}.`);\n        };\n    }\n\n    /**\n     * 附加事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    addEventHandler (event_type, event_handler) {\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                this.add_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                this.update_events.push(event_handler);\n                break;\n            case ServerSendEventHandler.DELETE:\n                this.delete_events.push(event_handler);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n\n    /**\n     * 移除事件處理函數\n     * @param event_type\n     * @param event_handler\n     */\n    removeEventHandler (event_type, event_handler) {\n        let index;\n        switch (event_type) {\n            case ServerSendEventHandler.ADD:\n                index = this.add_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.add_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.UPDATE:\n                index = this.update_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.update_events.splice(index, 1);\n                break;\n            case ServerSendEventHandler.DELETE:\n                index = this.delete_events.findIndex(item => Object.is(item, event_handler));\n                if (index === -1) {\n                    throw new ServerSendEventHandlerException(`Error #3: No such event handler.`);\n                }\n                this.delete_events.splice(index, 1);\n                break;\n            default:\n                throw new ServerSendEventHandlerException(`Error #1: Invalid event types: ${event_type}.`);\n                break;\n        }\n    }\n}\n```\nServerSendEventHandlerException.js:\n```JavaScript\n/**\n * Created by simon on 9/4/16.\n */\n\n/**\n * ServerSendEventHandler 專屬 Exception\n */\nexport default class ServerSendEventHandlerException  extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n}\n```\n為了讓 ECMAScript 2015 的程式碼能夠順利在瀏覽器上執行，我使用了 [Babel](https://babeljs.io/) 和 [webpack](https://webpack.github.io/) 將這些 js 轉成 ECMAScript 5 並整合成一個 bundle.js 檔案給 main.html 載入。\n\n最後的主要進入頁面如下 main.html:\n```HTML\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <script src=\"bundle.js\"></script>\n</head>\n<body>\n<table>\n    <thead>\n    <tr><th>產品名稱</th><th>價格</th><th>庫存</th></tr>\n    </thead>\n    <tbody id=\"product_list\">\n    </tbody>\n</table>\n</body>\n</html>\n```\n整個專案的程式可以再 [GitHub](https://github.com/smjhang/demos/tree/master/server-send-event)下載。\n\n## 開始測試\n首先在 Redis 插入起始資料:\n```\nHMSET product:1 name '芭樂'   price 5 stock 99\nHMSET product:2 name '西瓜'   price 5 stock 99\nHMSET product:3 name '蓮霧'   price 5 stock 99\nHMSET product:4 name '鳳梨'   price 5 stock 99\nHMSET product:5 name '蘋果'   price 5 stock 99\nHMSET product:6 name '奇異果' price 5 stock 99\nHMSET product:7 name '香蕉'   price 5 stock 99\nHMSET product:8 name '荔枝'   price 5 stock 99\n```\n\n進入頁面:\n{% asset_img main.jpg 第一次進入 %}\n\n在 Redis 新增資料:\n```\nHMSET product:9 name '小玉西瓜' price 15 stock 79\n```\n\n查看頁面:\n{% asset_img insert.jpg 新增資料 %}\n\n在 Redis 修改資料:\n```\nHMSET product:9 name '小玉西瓜' price 15 stock 75\n```\n\n查看頁面:\n{% asset_img update.jpg 修改資料 %}\n\n在 Redis 刪除資料:\n```\nDEL product:9\n```\n\n查看頁面:\n{% asset_img delete.jpg 刪除資料 %}\n\n# 小結\n沿續了 [Redis Notification][1] 一文中關於 Redis 推送資料的範例，本篇進一步使用 SSE 將此資料異動通知給瀏覽器，並且嘗試使用 ES 20015 來進行開發。從測試結果可以看到 SSE 確實能即時通知瀏覽器最新的資訊。\n雖然 SSE 可以沿用網頁伺服器而不需要自行開發伺服器程式，但是對於 SSE 的運作原理還是要有足夠深入了解，才能了解應該如何設定網頁伺服器，並且注意到許多安全性以及系統架構上的問題。\n在投入正式產品環境之前，還是要再經過謹慎的評估和測試才能運用。","slug":"server-send-event","published":1,"updated":"2016-11-10T16:54:26.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civcmytib0002xsav9rhzywf2","content":"<h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>HTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。<br>而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。<br>因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。</p>\n<a id=\"more\"></a>\n<h1 id=\"HTML5-Server-Send-Event-SSE\"><a href=\"#HTML5-Server-Send-Event-SSE\" class=\"headerlink\" title=\"HTML5 Server Send Event (SSE)\"></a>HTML5 Server Send Event (SSE)</h1><p>實作 SSE 有三個要點，首先是伺服器端的網頁程式必須要發送 SSE 專屬的內容類型，然後是傳輸的內容必須依照 SSE 的格式撰寫，最後是瀏覽器接收到訊息後的處理。</p>\n<h2 id=\"伺服器端-PHP-程式範例\"><a href=\"#伺服器端-PHP-程式範例\" class=\"headerlink\" title=\"伺服器端 PHP 程式範例\"></a>伺服器端 PHP 程式範例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\"># 將回傳的內容類型指定為 text/event-stream</span></div><div class=\"line\">header(<span class=\"string\">'Content-Type: text/event-stream'</span>);</div><div class=\"line\"><span class=\"comment\"># 避免瀏覽器快取 SSE 訊息，以保證最新的資訊能被接收到</span></div><div class=\"line\">header(<span class=\"string\">'Cache-Control: no-cache'</span>); </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 將要回傳的訊息整理程指定的格式並輸出</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span> string $data 要送出的資料</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendData</span><span class=\"params\">($data)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"data: $data \\n\\n\"</span>;</div><div class=\"line\">  <span class=\"comment\">// 避免 PHP 緩衝輸出，讓資料能夠即時輸出</span></div><div class=\"line\">  ob_flush();</div><div class=\"line\">  flush();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</div><div class=\"line\">    $serverTime = time();</div><div class=\"line\">    sendData(<span class=\"string\">'server time: '</span> . date(<span class=\"string\">\"h:i:s\"</span>, time()));</div><div class=\"line\">    <span class=\"comment\">// 避免輸出太快</span></div><div class=\"line\">    sleep(<span class=\"number\">1</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"資料格式\"><a href=\"#資料格式\" class=\"headerlink\" title=\"資料格式\"></a>資料格式</h2><p>SSE 的每個訊息由以下欄位構成：<br>event - 如果該訊息是一個事件通知，則此欄位代表事件的名稱，非必要欄位。<br>data - 訊息的資訊，必要欄位，一個訊息可以有多個 data 欄位。<br>id - 指定訊息的 id，可以讓接收者辨識目前的訊息，以便了解當前接收進度，非必要欄位。<br>retry - 指定從該訊息後，當瀏覽器斷線時，重新連接的間格時間，單位是毫秒，非必要欄位。<br>其中每個欄位以一個換行符號 \\n 分隔，而每個訊息最後以兩個換行符號分隔。<br>範例：<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">event: userconnect</div><div class=\"line\">data: &#123;<span class=\"string\">\"username\"</span>: <span class=\"string\">\"bobby\"</span>, <span class=\"string\">\"time\"</span>: <span class=\"string\">\"02:33:48\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">data: Here's a system message <span class=\"keyword\">of</span> <span class=\"keyword\">some</span> kind <span class=\"keyword\">that</span> will <span class=\"keyword\">get</span> used</div><div class=\"line\">data: <span class=\"keyword\">to</span> accomplish <span class=\"keyword\">some</span> task.</div><div class=\"line\"></div><div class=\"line\">event: usermessage</div><div class=\"line\">data: &#123;<span class=\"string\">\"username\"</span>: <span class=\"string\">\"bobby\"</span>, <span class=\"string\">\"time\"</span>: <span class=\"string\">\"02:34:11\"</span>, <span class=\"string\">\"text\"</span>: <span class=\"string\">\"Hi everyone.\"</span>&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"瀏覽器端程式範例\"><a href=\"#瀏覽器端程式範例\" class=\"headerlink\" title=\"瀏覽器端程式範例\"></a>瀏覽器端程式範例</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">    <span class=\"comment\">// 設定發送 SSE 訊息的伺服器端程式的 URL</span></div><div class=\"line\">    <span class=\"keyword\">var</span> source = <span class=\"keyword\">new</span> EventSource(<span class=\"string\">'server.php'</span>);</div><div class=\"line\">    <span class=\"comment\">// 設定當沒有指定 event 的 SSE 訊息發送過來時的處理函數</span></div><div class=\"line\">    source.onmessage = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">document</span>.body.innerHTML += e.data + <span class=\"string\">'&lt;br&gt;'</span>;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"comment\">// 設定當 event 欄位的值是 usermessage 的 SSE 訊息發送過來時的處理函數</span></div><div class=\"line\">    source.addEventListener(<span class=\"string\">'usermessage'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data.msg);</div><div class=\"line\">    &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">    </div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>詳細的 EventSource 用法可參考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events\" target=\"_blank\" rel=\"external\">Using server-sent events</a></p>\n<h1 id=\"Redis-Notification-即時顯示\"><a href=\"#Redis-Notification-即時顯示\" class=\"headerlink\" title=\"Redis Notification 即時顯示\"></a>Redis Notification 即時顯示</h1><p>在 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 中展示了將 Redis 的異動通知 PHP 程式的技術，現在要應用 SSE 進一步將異動傳達給客戶端。<br>首先將伺服器端的程式 notify.php 改寫為可以發送 SSE 訊息的程式，將原本的輸出轉換成 SSE 格式並停用輸出緩衝，還要注意 Web Server 如果會緩衝輸出也要先停用。<br>改寫後的程式 getUpdates.php 如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Author: simon</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocalStorage</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $product_store = []; <span class=\"comment\">// 目前所有 products</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 使用前更新目前所有 products</div><div class=\"line\">     * <span class=\"doctag\">@param</span> \\Predis\\Client $client_sync</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">(\\Predis\\Client $client_sync)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">            <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">            preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">            $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 排序 product_store</span></div><div class=\"line\">        ksort(<span class=\"keyword\">$this</span>-&gt;product_store);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 判斷 id 是否在 product_store 內</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@return</span> bool</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">contains</span><span class=\"params\">($id)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id])) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理新增事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: add\"</span> . PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'data: &#123;\"id\": \"'</span>.$id.<span class=\"string\">'\", \"name\": \"'</span>.$product[<span class=\"string\">'name'</span>].<span class=\"string\">'\", \"price\": \"'</span>.$product[<span class=\"string\">'price'</span>].<span class=\"string\">'\", \"stock\": \"'</span>.$product[<span class=\"string\">'stock'</span>].<span class=\"string\">'\"&#125;'</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $product;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理更改事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $data = [];</div><div class=\"line\">        $data[<span class=\"string\">'id'</span>] = $id;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] !== $product[<span class=\"string\">'name'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] !== $product[<span class=\"string\">'price'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] !== $product[<span class=\"string\">'stock'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: update\"</span>.PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"data: \"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> json_encode($data);</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 處理刪除事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteHandler</span><span class=\"params\">($id, $product)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $product = <span class=\"keyword\">$this</span>-&gt;product_store[$id];</div><div class=\"line\">        $data = [];</div><div class=\"line\">        $data[<span class=\"string\">'id'</span>] = $id;</div><div class=\"line\">        $data[<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        $data[<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        $data[<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: delete\"</span>.PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"data: \"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> json_encode($data);</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">$client = <span class=\"keyword\">new</span> Predis\\Async\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\"></div><div class=\"line\">$local_storage = <span class=\"keyword\">new</span> LocalStorage();</div><div class=\"line\">$local_storage-&gt;init($client_sync);</div><div class=\"line\"></div><div class=\"line\">header(<span class=\"string\">\"Content-Type: text/event-stream\"</span>); <span class=\"comment\">// 設定 Server Send Event 的 Content-Type</span></div><div class=\"line\">header(<span class=\"string\">\"Cache-Control: no-cache\"</span>); <span class=\"comment\">// 避免瀏覽器快取 Server Send Event 的內容</span></div><div class=\"line\">header(<span class=\"string\">\"X-Accel-Buffering: no\"</span>); <span class=\"comment\">// 停用 Nginx 輸出緩衝控制</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class=\"line\"> */</div><div class=\"line\">$client-&gt;connect(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($client)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class=\"line\">    $client-&gt;pubSubLoop([<span class=\"string\">'psubscribe'</span>=&gt;<span class=\"string\">'__keyspace@*__:product:*'</span>],</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($event, $pubsub)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/__keyspace@\\d+__:(product:(\\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class=\"line\">                $product_key = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">                $product_id = $matches[<span class=\"number\">2</span>];</div><div class=\"line\">                <span class=\"comment\">// 取得被異動後，最新的 product 資料</span></div><div class=\"line\">                $product = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">                <span class=\"comment\">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class=\"line\">                $op = $event-&gt;payload;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($op === <span class=\"string\">'del'</span>) &#123;</div><div class=\"line\">                    $local_storage-&gt;deleteHandler($product_id, $product);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($op === <span class=\"string\">'hset'</span>) &#123;</div><div class=\"line\">                    <span class=\"comment\">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class=\"line\">                        $local_storage-&gt;updateHandler($product_id, $product);</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                        $local_storage-&gt;insertHandler($product_id,$product);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($op === <span class=\"string\">'quit'</span>) &#123;</div><div class=\"line\">                    $pubsub-&gt;quit();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 開始監聽 keyspace 異動事件</span></div><div class=\"line\">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure></p>\n<p>為了要讓後來連線的程式能 follow 目前最新的結果，需要有一隻程式 getProductList.php 可以顯示目前最新的產品清單如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Author: simon</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">$product_store = [];</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">    <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">    preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">    $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">    <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">    $product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">&#125;</div><div class=\"line\">$output = [];</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($product_store <span class=\"keyword\">as</span> $id =&gt; $product) &#123;</div><div class=\"line\">    $output[] = [<span class=\"string\">\"id\"</span> =&gt; $id, <span class=\"string\">\"name\"</span> =&gt; $product[<span class=\"string\">'name'</span>], <span class=\"string\">\"price\"</span> =&gt; $product[<span class=\"string\">'price'</span>], <span class=\"string\">\"stock\"</span> =&gt; $product[<span class=\"string\">'stock'</span>]];</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> json_encode($output);</div></pre></td></tr></table></figure>\n<p>現在可以開始寫瀏覽器端的程式了，需要的程式檔案列表如下：</p>\n<table>\n<thead>\n<tr>\n<th>file name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>main.js</td>\n<td>負責整合各部分程式碼並操作 DOM</td>\n</tr>\n<tr>\n<td>ProductList.js</td>\n<td>負責管理商品清單的資料</td>\n</tr>\n<tr>\n<td>ProductListException.js</td>\n<td>負責通知其他程式 ProductList 發生異常</td>\n</tr>\n<tr>\n<td>ServerSendEventHandler.js</td>\n<td>負責處理產品清單異動的事件</td>\n</tr>\n<tr>\n<td>ServerSendEventHandlerException.js</td>\n<td>負責通知其他程式 ServerSendEventHandler 發生異常</td>\n</tr>\n</tbody>\n</table>\n<p>main.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">import</span> ServerSendEventHandler <span class=\"keyword\">from</span> <span class=\"string\">'./ServerSendEventHandler.js'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> ProductList <span class=\"keyword\">from</span> <span class=\"string\">'./ProductList.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> product_list = <span class=\"keyword\">new</span> ProductList();</div><div class=\"line\">    <span class=\"keyword\">let</span> sse_handler = <span class=\"keyword\">new</span> ServerSendEventHandler();</div><div class=\"line\">    <span class=\"comment\">// 新連線的頁面先更新最新產品清單</span></div><div class=\"line\">    product_list.loadList(<span class=\"string\">'./getProductList.php'</span>);</div><div class=\"line\">    <span class=\"comment\">// 將產品清單的資訊顯示在頁面上</span></div><div class=\"line\">    <span class=\"keyword\">let</span> tbody = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"product_list\"</span>);</div><div class=\"line\">    makeTableFromProductList(tbody, product_list.getProductList());</div><div class=\"line\">    <span class=\"comment\">// 設定當產品異動時要進行的各種處理，這邊主要是更新產品清單資料 product_list 和修改頁面上顯示的資訊</span></div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(<span class=\"literal\">undefined</span>, tbody));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(<span class=\"literal\">undefined</span>, tbody));</div><div class=\"line\">    <span class=\"comment\">// 開始監聽產品異動事件並進行相應處理</span></div><div class=\"line\">    sse_handler.listen(<span class=\"string\">\"./getUpdates.php\"</span>);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 顯示產品清單</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product_list</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeTableFromProductList</span> (<span class=\"params\">tbody, product_list</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> docfrag = <span class=\"built_in\">document</span>.createDocumentFragment();</div><div class=\"line\">    product_list.forEach(product =&gt; insertRow(docfrag, product));</div><div class=\"line\">    tbody.appendChild(docfrag);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 插入產品</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertRow</span> (<span class=\"params\">tbody, product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"tr\"</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> &#123;id, name, price, stock&#125; = product;</div><div class=\"line\">    tr.setAttribute(<span class=\"string\">'id'</span>, id);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_name = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_price = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_stock = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    td_name.textContent = name;</div><div class=\"line\">    td_name.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'name'</span>);</div><div class=\"line\">    td_price.textContent = price;</div><div class=\"line\">    td_price.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'price'</span>);</div><div class=\"line\">    td_stock.textContent = stock;</div><div class=\"line\">    td_stock.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'stock'</span>);</div><div class=\"line\">    tr.appendChild(td_name);</div><div class=\"line\">    tr.appendChild(td_price);</div><div class=\"line\">    tr.appendChild(td_stock);</div><div class=\"line\">    tbody.appendChild(tr);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 更新產品</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRow</span> (<span class=\"params\">product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> id = product.id;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"keyword\">if</span> (tr === <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> product) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(product, key)) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> updating_td = tr.querySelector(<span class=\"string\">`td[name=\"<span class=\"subst\">$&#123;key&#125;</span>\"]`</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (updating_td !== <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">                updating_td.textContent = product[key];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 刪除產品</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteRow</span> (<span class=\"params\">tbody, product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> id = product.id;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"keyword\">if</span> (tr !== <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        tbody.removeChild(tr);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ProductList.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">import</span> ProductListException <span class=\"keyword\">from</span> <span class=\"string\">'./ProductListException.js'</span>;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 維護本地產品列表的物件</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductList</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.product_list = [];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 從 Server 取得目前所有產品列表</div><div class=\"line\">     * @param url Server Url</div><div class=\"line\">     */</div><div class=\"line\">    loadList (url) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">            <span class=\"comment\">// 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr</span></div><div class=\"line\">            xhr.open(<span class=\"string\">\"GET\"</span>, url, <span class=\"literal\">false</span>);</div><div class=\"line\">            xhr.send();</div><div class=\"line\">            <span class=\"keyword\">let</span> result = <span class=\"built_in\">JSON</span>.parse(xhr.responseText);</div><div class=\"line\">            <span class=\"keyword\">this</span>.product_list = result;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #1: Cannot load product list from remote server: <span class=\"subst\">$&#123;url&#125;</span>.`</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 取得產品列表</div><div class=\"line\">     * @returns &#123;Array|*&#125;</div><div class=\"line\">     */</div><div class=\"line\">    getProductList () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.product_list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 增加產品</div><div class=\"line\">     * @param item</div><div class=\"line\">     */</div><div class=\"line\">    addItem (item) &#123;</div><div class=\"line\">         <span class=\"keyword\">this</span>.product_list.push(item);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 刪除產品</div><div class=\"line\">     * @param deleting_item</div><div class=\"line\">     */</div><div class=\"line\">    deleteItemById (deleting_item) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.product_list.findIndex(item =&gt; deleting_item.id === item.id);</div><div class=\"line\">        <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #2: Delete product error, not such product id: <span class=\"subst\">$&#123;deleting_item.id&#125;</span>.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.product_list.splice(index,<span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 更新產品</div><div class=\"line\">     * @param updating_item</div><div class=\"line\">     */</div><div class=\"line\">    updateItem (updating_item) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.product_list.findIndex(item =&gt; item.id === updating_item.id);</div><div class=\"line\">        <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #3: Update product error, not such product id: <span class=\"subst\">$&#123;updating_item.id&#125;</span>.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 更新產品部分資訊</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> prop <span class=\"keyword\">in</span> updating_item) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(updating_item, prop)) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.product_list[index][prop] = updating_item[prop];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ProductListException.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * ProductList 專屬 Exception</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductListException</span>  <span class=\"keyword\">extends</span> <span class=\"title\">Error</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(message) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(message);</div><div class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"keyword\">this</span>.constructor.name;</div><div class=\"line\">        <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ServerSendEventHandler.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> ServerSendEventHandlerException <span class=\"keyword\">from</span> <span class=\"string\">'./ServerSendEventHandlerException.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> ADD = <span class=\"number\">0</span>; <span class=\"comment\">// 產品新增事件代碼</span></div><div class=\"line\"><span class=\"keyword\">const</span> UPDATE = <span class=\"number\">1</span>; <span class=\"comment\">// 產品修改事件代碼</span></div><div class=\"line\"><span class=\"keyword\">const</span> DELETE = <span class=\"number\">2</span>; <span class=\"comment\">// 產品刪除事件代碼</span></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Server Send Event 處理物件</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerSendEventHandler</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.update_events = [];</div><div class=\"line\">        <span class=\"keyword\">this</span>.delete_events = [];</div><div class=\"line\">        <span class=\"keyword\">this</span>.add_events = [];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 取得產品新增事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">static</span> get ADD () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> ADD;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 取得產品修改事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">static</span> get UPDATE () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> UPDATE;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 取得產品刪除事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">static</span> get DELETE () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> DELETE;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 開始監聽 Server Send Event 並進行處理</div><div class=\"line\">     * @param url</div><div class=\"line\">     */</div><div class=\"line\">    listen (url) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ([<span class=\"keyword\">this</span>.update_events.length, <span class=\"keyword\">this</span>.delete_events.length, <span class=\"keyword\">this</span>.add_events.length].includes(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #2: Event handlers must be specified before listing event.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">let</span> event_source = <span class=\"keyword\">new</span> EventSource(url);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'add'</span>,  (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.add_events.forEach( event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'update'</span>,  (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.update_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'delete'</span>, (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.delete_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.onerror = (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #4: Server send event failed: <span class=\"subst\">$&#123;e&#125;</span>.`</span>);</div><div class=\"line\">        &#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 附加事件處理函數</div><div class=\"line\">     * @param event_type</div><div class=\"line\">     * @param event_handler</div><div class=\"line\">     */</div><div class=\"line\">    addEventHandler (event_type, event_handler) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (event_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.ADD:</div><div class=\"line\">                <span class=\"keyword\">this</span>.add_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.UPDATE:</div><div class=\"line\">                <span class=\"keyword\">this</span>.update_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.DELETE:</div><div class=\"line\">                <span class=\"keyword\">this</span>.delete_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #1: Invalid event types: <span class=\"subst\">$&#123;event_type&#125;</span>.`</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 移除事件處理函數</div><div class=\"line\">     * @param event_type</div><div class=\"line\">     * @param event_handler</div><div class=\"line\">     */</div><div class=\"line\">    removeEventHandler (event_type, event_handler) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (event_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.ADD:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.add_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.add_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.UPDATE:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.update_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.update_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.DELETE:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.delete_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.delete_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #1: Invalid event types: <span class=\"subst\">$&#123;event_type&#125;</span>.`</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ServerSendEventHandlerException.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * ServerSendEventHandler 專屬 Exception</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerSendEventHandlerException</span>  <span class=\"keyword\">extends</span> <span class=\"title\">Error</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(message) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(message);</div><div class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"keyword\">this</span>.constructor.name;</div><div class=\"line\">        <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>為了讓 ECMAScript 2015 的程式碼能夠順利在瀏覽器上執行，我使用了 <a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"external\">Babel</a> 和 <a href=\"https://webpack.github.io/\" target=\"_blank\" rel=\"external\">webpack</a> 將這些 js 轉成 ECMAScript 5 並整合成一個 bundle.js 檔案給 main.html 載入。</p>\n<p>最後的主要進入頁面如下 main.html:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"bundle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>產品名稱<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>庫存<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">id</span>=<span class=\"string\">\"product_list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>整個專案的程式可以再 <a href=\"https://github.com/smjhang/demos/tree/master/server-send-event\" target=\"_blank\" rel=\"external\">GitHub</a>下載。</p>\n<h2 id=\"開始測試\"><a href=\"#開始測試\" class=\"headerlink\" title=\"開始測試\"></a>開始測試</h2><p>首先在 Redis 插入起始資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">1</span> <span class=\"keyword\">name</span> <span class=\"string\">'芭樂'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">2</span> <span class=\"keyword\">name</span> <span class=\"string\">'西瓜'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">3</span> <span class=\"keyword\">name</span> <span class=\"string\">'蓮霧'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">4</span> <span class=\"keyword\">name</span> <span class=\"string\">'鳳梨'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">5</span> <span class=\"keyword\">name</span> <span class=\"string\">'蘋果'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">6</span> <span class=\"keyword\">name</span> <span class=\"string\">'奇異果'</span> price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">7</span> <span class=\"keyword\">name</span> <span class=\"string\">'香蕉'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">8</span> <span class=\"keyword\">name</span> <span class=\"string\">'荔枝'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div></pre></td></tr></table></figure></p>\n<p>進入頁面:<br><img src=\"/2016/09/08/server-send-event/main.jpg\" alt=\"第一次進入\" title=\"第一次進入\"></p>\n<p>在 Redis 新增資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">9</span> <span class=\"keyword\">name</span> <span class=\"string\">'小玉西瓜'</span> price <span class=\"number\">15</span> stock <span class=\"number\">79</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/insert.jpg\" alt=\"新增資料\" title=\"新增資料\"></p>\n<p>在 Redis 修改資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">9</span> <span class=\"keyword\">name</span> <span class=\"string\">'小玉西瓜'</span> price <span class=\"number\">15</span> stock <span class=\"number\">75</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/update.jpg\" alt=\"修改資料\" title=\"修改資料\"></p>\n<p>在 Redis 刪除資料:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">DEL</span> <span class=\"selector-tag\">product</span><span class=\"selector-pseudo\">:9</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/delete.jpg\" alt=\"刪除資料\" title=\"刪除資料\"></p>\n<h1 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h1><p>沿續了 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 一文中關於 Redis 推送資料的範例，本篇進一步使用 SSE 將此資料異動通知給瀏覽器，並且嘗試使用 ES 20015 來進行開發。從測試結果可以看到 SSE 確實能即時通知瀏覽器最新的資訊。<br>雖然 SSE 可以沿用網頁伺服器而不需要自行開發伺服器程式，但是對於 SSE 的運作原理還是要有足夠深入了解，才能了解應該如何設定網頁伺服器，並且注意到許多安全性以及系統架構上的問題。<br>在投入正式產品環境之前，還是要再經過謹慎的評估和測試才能運用。</p>\n","excerpt":"<h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>HTML 5 Server Send Event (SSE) 是一種將資料從伺服器端推送到瀏覽器端的技術。與 Ajax polling 這種多次發送 HTTP 請求的的方式相比，SSE 只需要一次的 HTTP 請求，因此能減少連線次數及傳輸的資料量、降低伺服器的負擔，並讓使用者得到更即時的資訊。<br>而與 Web Socket 相較，它沿用 HTTP 協定，不需要再額外建立專門處理其他協定的伺服端程式，直接沿用原本的網頁伺服器（如：Apache, Nginx）即可。所以無論是在程式開發上還是維運管理上都要簡易很多。<br>因此，如果只需要單向的從伺服器到瀏覽器的推送，就不需要使用 Web Socket，可以只使用 SSE。接續 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 中提到的 Redis 通知 PHP 程式的技術，本篇將展示如何使用 SSE 將 Redis 的更新同步到瀏覽器，並使用 ECMAScript 2015 的新功能來組織程式。</p>","more":"<h1 id=\"HTML5-Server-Send-Event-SSE\"><a href=\"#HTML5-Server-Send-Event-SSE\" class=\"headerlink\" title=\"HTML5 Server Send Event (SSE)\"></a>HTML5 Server Send Event (SSE)</h1><p>實作 SSE 有三個要點，首先是伺服器端的網頁程式必須要發送 SSE 專屬的內容類型，然後是傳輸的內容必須依照 SSE 的格式撰寫，最後是瀏覽器接收到訊息後的處理。</p>\n<h2 id=\"伺服器端-PHP-程式範例\"><a href=\"#伺服器端-PHP-程式範例\" class=\"headerlink\" title=\"伺服器端 PHP 程式範例\"></a>伺服器端 PHP 程式範例</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\"># 將回傳的內容類型指定為 text/event-stream</span></div><div class=\"line\">header(<span class=\"string\">'Content-Type: text/event-stream'</span>);</div><div class=\"line\"><span class=\"comment\"># 避免瀏覽器快取 SSE 訊息，以保證最新的資訊能被接收到</span></div><div class=\"line\">header(<span class=\"string\">'Cache-Control: no-cache'</span>); </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 將要回傳的訊息整理程指定的格式並輸出</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span> string $data 要送出的資料</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sendData</span><span class=\"params\">($data)</span> </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"string\">\"data: $data \\n\\n\"</span>;</div><div class=\"line\">  <span class=\"comment\">// 避免 PHP 緩衝輸出，讓資料能夠即時輸出</span></div><div class=\"line\">  ob_flush();</div><div class=\"line\">  flush();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</div><div class=\"line\">    $serverTime = time();</div><div class=\"line\">    sendData(<span class=\"string\">'server time: '</span> . date(<span class=\"string\">\"h:i:s\"</span>, time()));</div><div class=\"line\">    <span class=\"comment\">// 避免輸出太快</span></div><div class=\"line\">    sleep(<span class=\"number\">1</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"資料格式\"><a href=\"#資料格式\" class=\"headerlink\" title=\"資料格式\"></a>資料格式</h2><p>SSE 的每個訊息由以下欄位構成：<br>event - 如果該訊息是一個事件通知，則此欄位代表事件的名稱，非必要欄位。<br>data - 訊息的資訊，必要欄位，一個訊息可以有多個 data 欄位。<br>id - 指定訊息的 id，可以讓接收者辨識目前的訊息，以便了解當前接收進度，非必要欄位。<br>retry - 指定從該訊息後，當瀏覽器斷線時，重新連接的間格時間，單位是毫秒，非必要欄位。<br>其中每個欄位以一個換行符號 \\n 分隔，而每個訊息最後以兩個換行符號分隔。<br>範例：<br><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">event: userconnect</div><div class=\"line\">data: &#123;<span class=\"string\">\"username\"</span>: <span class=\"string\">\"bobby\"</span>, <span class=\"string\">\"time\"</span>: <span class=\"string\">\"02:33:48\"</span>&#125;</div><div class=\"line\"></div><div class=\"line\">data: Here's a system message <span class=\"keyword\">of</span> <span class=\"keyword\">some</span> kind <span class=\"keyword\">that</span> will <span class=\"keyword\">get</span> used</div><div class=\"line\">data: <span class=\"keyword\">to</span> accomplish <span class=\"keyword\">some</span> task.</div><div class=\"line\"></div><div class=\"line\">event: usermessage</div><div class=\"line\">data: &#123;<span class=\"string\">\"username\"</span>: <span class=\"string\">\"bobby\"</span>, <span class=\"string\">\"time\"</span>: <span class=\"string\">\"02:34:11\"</span>, <span class=\"string\">\"text\"</span>: <span class=\"string\">\"Hi everyone.\"</span>&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"瀏覽器端程式範例\"><a href=\"#瀏覽器端程式範例\" class=\"headerlink\" title=\"瀏覽器端程式範例\"></a>瀏覽器端程式範例</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">    <span class=\"comment\">// 設定發送 SSE 訊息的伺服器端程式的 URL</span></div><div class=\"line\">    <span class=\"keyword\">var</span> source = <span class=\"keyword\">new</span> EventSource(<span class=\"string\">'server.php'</span>);</div><div class=\"line\">    <span class=\"comment\">// 設定當沒有指定 event 的 SSE 訊息發送過來時的處理函數</span></div><div class=\"line\">    source.onmessage = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      <span class=\"built_in\">document</span>.body.innerHTML += e.data + <span class=\"string\">'&lt;br&gt;'</span>;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    <span class=\"comment\">// 設定當 event 欄位的值是 usermessage 的 SSE 訊息發送過來時的處理函數</span></div><div class=\"line\">    source.addEventListener(<span class=\"string\">'usermessage'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">var</span> data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">      <span class=\"built_in\">console</span>.log(data.msg);</div><div class=\"line\">    &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">    </div><div class=\"line\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>詳細的 EventSource 用法可參考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events\">Using server-sent events</a></p>\n<h1 id=\"Redis-Notification-即時顯示\"><a href=\"#Redis-Notification-即時顯示\" class=\"headerlink\" title=\"Redis Notification 即時顯示\"></a>Redis Notification 即時顯示</h1><p>在 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 中展示了將 Redis 的異動通知 PHP 程式的技術，現在要應用 SSE 進一步將異動傳達給客戶端。<br>首先將伺服器端的程式 notify.php 改寫為可以發送 SSE 訊息的程式，將原本的輸出轉換成 SSE 格式並停用輸出緩衝，還要注意 Web Server 如果會緩衝輸出也要先停用。<br>改寫後的程式 getUpdates.php 如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Author: simon</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocalStorage</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $product_store = []; <span class=\"comment\">// 目前所有 products</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 使用前更新目前所有 products</div><div class=\"line\">     * <span class=\"doctag\">@param</span> \\Predis\\Client $client_sync</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">init</span><span class=\"params\">(\\Predis\\Client $client_sync)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">        <span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">            <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">            preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">            $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">            <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 排序 product_store</span></div><div class=\"line\">        ksort(<span class=\"keyword\">$this</span>-&gt;product_store);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 判斷 id 是否在 product_store 內</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@return</span> bool</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">contains</span><span class=\"params\">($id)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id])) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理新增事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: add\"</span> . PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">'data: &#123;\"id\": \"'</span>.$id.<span class=\"string\">'\", \"name\": \"'</span>.$product[<span class=\"string\">'name'</span>].<span class=\"string\">'\", \"price\": \"'</span>.$product[<span class=\"string\">'price'</span>].<span class=\"string\">'\", \"stock\": \"'</span>.$product[<span class=\"string\">'stock'</span>].<span class=\"string\">'\"&#125;'</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;product_store[$id] = $product;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理更改事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $data = [];</div><div class=\"line\">        $data[<span class=\"string\">'id'</span>] = $id;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] !== $product[<span class=\"string\">'name'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] !== $product[<span class=\"string\">'price'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] !== $product[<span class=\"string\">'stock'</span>]) &#123;</div><div class=\"line\">            $data[<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;product_store[$id][<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: update\"</span>.PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"data: \"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> json_encode($data);</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 處理刪除事件</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $id</div><div class=\"line\">     * <span class=\"doctag\">@param</span> $product</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteHandler</span><span class=\"params\">($id, $product)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $product = <span class=\"keyword\">$this</span>-&gt;product_store[$id];</div><div class=\"line\">        $data = [];</div><div class=\"line\">        $data[<span class=\"string\">'id'</span>] = $id;</div><div class=\"line\">        $data[<span class=\"string\">'name'</span>] = $product[<span class=\"string\">'name'</span>];</div><div class=\"line\">        $data[<span class=\"string\">'price'</span>] = $product[<span class=\"string\">'price'</span>];</div><div class=\"line\">        $data[<span class=\"string\">'stock'</span>] = $product[<span class=\"string\">'stock'</span>];</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"event: delete\"</span>.PHP_EOL;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"data: \"</span>;</div><div class=\"line\">        <span class=\"keyword\">echo</span> json_encode($data);</div><div class=\"line\">        <span class=\"keyword\">echo</span> PHP_EOL.PHP_EOL;</div><div class=\"line\">        ob_flush();</div><div class=\"line\">        flush();</div><div class=\"line\">        <span class=\"keyword\">unset</span>(<span class=\"keyword\">$this</span>-&gt;product_store[$id]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">$client = <span class=\"keyword\">new</span> Predis\\Async\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\"></div><div class=\"line\">$local_storage = <span class=\"keyword\">new</span> LocalStorage();</div><div class=\"line\">$local_storage-&gt;init($client_sync);</div><div class=\"line\"></div><div class=\"line\">header(<span class=\"string\">\"Content-Type: text/event-stream\"</span>); <span class=\"comment\">// 設定 Server Send Event 的 Content-Type</span></div><div class=\"line\">header(<span class=\"string\">\"Cache-Control: no-cache\"</span>); <span class=\"comment\">// 避免瀏覽器快取 Server Send Event 的內容</span></div><div class=\"line\">header(<span class=\"string\">\"X-Accel-Buffering: no\"</span>); <span class=\"comment\">// 停用 Nginx 輸出緩衝控制</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 註冊處理 keyspace 異動的事件，並根據事件的訊息做相應的處理</div><div class=\"line\"> */</span></div><div class=\"line\">$client-&gt;connect(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($client)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">// 使用 psubscribe 訂閱 product:#id 這種樣式的 key 被異動的事件</span></div><div class=\"line\">    $client-&gt;pubSubLoop([<span class=\"string\">'psubscribe'</span>=&gt;<span class=\"string\">'__keyspace@*__:product:*'</span>],</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">($event, $pubsub)</span> <span class=\"title\">use</span> <span class=\"params\">($client_sync, $local_storage)</span> </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// 當 product:#id 被異動的時候，根據事件發生的 channel 的名稱取得 key 的名稱和 product 的 id</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/__keyspace@\\d+__:(product:(\\d+))/'</span>, $event-&gt;channel, $matches)) &#123;</div><div class=\"line\">                $product_key = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">                $product_id = $matches[<span class=\"number\">2</span>];</div><div class=\"line\">                <span class=\"comment\">// 取得被異動後，最新的 product 資料</span></div><div class=\"line\">                $product = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">                <span class=\"comment\">// 根據事件傳來的訊息得知操作 key 的類型</span></div><div class=\"line\">                $op = $event-&gt;payload;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($op === <span class=\"string\">'del'</span>) &#123;</div><div class=\"line\">                    $local_storage-&gt;deleteHandler($product_id, $product);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($op === <span class=\"string\">'hset'</span>) &#123;</div><div class=\"line\">                    <span class=\"comment\">// 當操作類型是 hset 的時候，需要從目前的 product store 去判斷是新增還是修改</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> ($local_storage-&gt;contains($product_id)) &#123;</div><div class=\"line\">                        $local_storage-&gt;updateHandler($product_id, $product);</div><div class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                        $local_storage-&gt;insertHandler($product_id,$product);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> ($op === <span class=\"string\">'quit'</span>) &#123;</div><div class=\"line\">                    $pubsub-&gt;quit();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"comment\">// 開始監聽 keyspace 異動事件</span></div><div class=\"line\">$client-&gt;getEventLoop()-&gt;run();</div></pre></td></tr></table></figure></p>\n<p>為了要讓後來連線的程式能 follow 目前最新的結果，需要有一隻程式 getProductList.php 可以顯示目前最新的產品清單如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Author: simon</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span>.<span class=\"string\">'/vendor/autoload.php'</span>;</div><div class=\"line\">$client_sync = <span class=\"keyword\">new</span> Predis\\Client(<span class=\"string\">'tcp://127.0.0.1:6379'</span>);</div><div class=\"line\">$all_product_keys = $client_sync-&gt;keys(<span class=\"string\">'product:*'</span>);</div><div class=\"line\">$product_store = [];</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($all_product_keys <span class=\"keyword\">as</span> $product_key) &#123;</div><div class=\"line\">    <span class=\"comment\">// 抓取 id</span></div><div class=\"line\">    preg_match(<span class=\"string\">'/product:(\\d+)/'</span>, $product_key, $matches);</div><div class=\"line\">    $id = $matches[<span class=\"number\">1</span>];</div><div class=\"line\">    <span class=\"comment\">// 設定 id=&gt;product 關聯</span></div><div class=\"line\">    $product_store[$id] = $client_sync-&gt;hgetall($product_key);</div><div class=\"line\">&#125;</div><div class=\"line\">$output = [];</div><div class=\"line\"><span class=\"keyword\">foreach</span> ($product_store <span class=\"keyword\">as</span> $id =&gt; $product) &#123;</div><div class=\"line\">    $output[] = [<span class=\"string\">\"id\"</span> =&gt; $id, <span class=\"string\">\"name\"</span> =&gt; $product[<span class=\"string\">'name'</span>], <span class=\"string\">\"price\"</span> =&gt; $product[<span class=\"string\">'price'</span>], <span class=\"string\">\"stock\"</span> =&gt; $product[<span class=\"string\">'stock'</span>]];</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">echo</span> json_encode($output);</div></pre></td></tr></table></figure>\n<p>現在可以開始寫瀏覽器端的程式了，需要的程式檔案列表如下：</p>\n<table>\n<thead>\n<tr>\n<th>file name</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>main.js</td>\n<td>負責整合各部分程式碼並操作 DOM</td>\n</tr>\n<tr>\n<td>ProductList.js</td>\n<td>負責管理商品清單的資料</td>\n</tr>\n<tr>\n<td>ProductListException.js</td>\n<td>負責通知其他程式 ProductList 發生異常</td>\n</tr>\n<tr>\n<td>ServerSendEventHandler.js</td>\n<td>負責處理產品清單異動的事件</td>\n</tr>\n<tr>\n<td>ServerSendEventHandlerException.js</td>\n<td>負責通知其他程式 ServerSendEventHandler 發生異常</td>\n</tr>\n</tbody>\n</table>\n<p>main.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">import</span> ServerSendEventHandler <span class=\"keyword\">from</span> <span class=\"string\">'./ServerSendEventHandler.js'</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> ProductList <span class=\"keyword\">from</span> <span class=\"string\">'./ProductList.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> product_list = <span class=\"keyword\">new</span> ProductList();</div><div class=\"line\">    <span class=\"keyword\">let</span> sse_handler = <span class=\"keyword\">new</span> ServerSendEventHandler();</div><div class=\"line\">    <span class=\"comment\">// 新連線的頁面先更新最新產品清單</span></div><div class=\"line\">    product_list.loadList(<span class=\"string\">'./getProductList.php'</span>);</div><div class=\"line\">    <span class=\"comment\">// 將產品清單的資訊顯示在頁面上</span></div><div class=\"line\">    <span class=\"keyword\">let</span> tbody = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"product_list\"</span>);</div><div class=\"line\">    makeTableFromProductList(tbody, product_list.getProductList());</div><div class=\"line\">    <span class=\"comment\">// 設定當產品異動時要進行的各種處理，這邊主要是更新產品清單資料 product_list 和修改頁面上顯示的資訊</span></div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, product_list.addItem.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.ADD, insertRow.bind(<span class=\"literal\">undefined</span>, tbody));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, product_list.updateItem.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.UPDATE, updateRow);</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, product_list.deleteItemById.bind(product_list));</div><div class=\"line\">    sse_handler.addEventHandler(ServerSendEventHandler.DELETE, deleteRow.bind(<span class=\"literal\">undefined</span>, tbody));</div><div class=\"line\">    <span class=\"comment\">// 開始監聽產品異動事件並進行相應處理</span></div><div class=\"line\">    sse_handler.listen(<span class=\"string\">\"./getUpdates.php\"</span>);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 顯示產品清單</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product_list</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeTableFromProductList</span> (<span class=\"params\">tbody, product_list</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> docfrag = <span class=\"built_in\">document</span>.createDocumentFragment();</div><div class=\"line\">    product_list.forEach(product =&gt; insertRow(docfrag, product));</div><div class=\"line\">    tbody.appendChild(docfrag);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 插入產品</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertRow</span> (<span class=\"params\">tbody, product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"tr\"</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> &#123;id, name, price, stock&#125; = product;</div><div class=\"line\">    tr.setAttribute(<span class=\"string\">'id'</span>, id);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_name = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_price = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    <span class=\"keyword\">let</span> td_stock = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'td'</span>);</div><div class=\"line\">    td_name.textContent = name;</div><div class=\"line\">    td_name.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'name'</span>);</div><div class=\"line\">    td_price.textContent = price;</div><div class=\"line\">    td_price.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'price'</span>);</div><div class=\"line\">    td_stock.textContent = stock;</div><div class=\"line\">    td_stock.setAttribute(<span class=\"string\">'name'</span>,<span class=\"string\">'stock'</span>);</div><div class=\"line\">    tr.appendChild(td_name);</div><div class=\"line\">    tr.appendChild(td_price);</div><div class=\"line\">    tr.appendChild(td_stock);</div><div class=\"line\">    tbody.appendChild(tr);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 更新產品</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRow</span> (<span class=\"params\">product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> id = product.id;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"keyword\">if</span> (tr === <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> product) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(product, key)) &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> updating_td = tr.querySelector(<span class=\"string\">`td[name=\"<span class=\"subst\">$&#123;key&#125;</span>\"]`</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (updating_td !== <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">                updating_td.textContent = product[key];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 刪除產品</div><div class=\"line\"> * @param tbody</div><div class=\"line\"> * @param product</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deleteRow</span> (<span class=\"params\">tbody, product</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> id = product.id;</div><div class=\"line\">    <span class=\"keyword\">let</span> tr = <span class=\"built_in\">document</span>.getElementById(id);</div><div class=\"line\">    <span class=\"keyword\">if</span> (tr !== <span class=\"literal\">null</span>) &#123;</div><div class=\"line\">        tbody.removeChild(tr);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ProductList.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">import</span> ProductListException <span class=\"keyword\">from</span> <span class=\"string\">'./ProductListException.js'</span>;</div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 維護本地產品列表的物件</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductList</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.product_list = [];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 從 Server 取得目前所有產品列表</div><div class=\"line\">     * @param url Server Url</div><div class=\"line\">     */</span></div><div class=\"line\">    loadList (url) &#123;</div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</div><div class=\"line\">            <span class=\"comment\">// 因為這個方法必須確實取得資料才能回傳，所以使用同步版本的 xhr</span></div><div class=\"line\">            xhr.open(<span class=\"string\">\"GET\"</span>, url, <span class=\"literal\">false</span>);</div><div class=\"line\">            xhr.send();</div><div class=\"line\">            <span class=\"keyword\">let</span> result = <span class=\"built_in\">JSON</span>.parse(xhr.responseText);</div><div class=\"line\">            <span class=\"keyword\">this</span>.product_list = result;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125; <span class=\"keyword\">catch</span> (e) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #1: Cannot load product list from remote server: <span class=\"subst\">$&#123;url&#125;</span>.`</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 取得產品列表</div><div class=\"line\">     * @returns &#123;Array|*&#125;</div><div class=\"line\">     */</span></div><div class=\"line\">    getProductList () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.product_list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 增加產品</div><div class=\"line\">     * @param item</div><div class=\"line\">     */</span></div><div class=\"line\">    addItem (item) &#123;</div><div class=\"line\">         <span class=\"keyword\">this</span>.product_list.push(item);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 刪除產品</div><div class=\"line\">     * @param deleting_item</div><div class=\"line\">     */</span></div><div class=\"line\">    deleteItemById (deleting_item) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.product_list.findIndex(item =&gt; deleting_item.id === item.id);</div><div class=\"line\">        <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #2: Delete product error, not such product id: <span class=\"subst\">$&#123;deleting_item.id&#125;</span>.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">this</span>.product_list.splice(index,<span class=\"number\">1</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 更新產品</div><div class=\"line\">     * @param updating_item</div><div class=\"line\">     */</span></div><div class=\"line\">    updateItem (updating_item) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"keyword\">this</span>.product_list.findIndex(item =&gt; item.id === updating_item.id);</div><div class=\"line\">        <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ProductListException(<span class=\"string\">`Error #3: Update product error, not such product id: <span class=\"subst\">$&#123;updating_item.id&#125;</span>.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// 更新產品部分資訊</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> prop <span class=\"keyword\">in</span> updating_item) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">Object</span>.prototype.hasOwnProperty.call(updating_item, prop)) &#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>.product_list[index][prop] = updating_item[prop];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ProductListException.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * ProductList 專屬 Exception</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ProductListException</span>  <span class=\"keyword\">extends</span> <span class=\"title\">Error</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(message) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(message);</div><div class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"keyword\">this</span>.constructor.name;</div><div class=\"line\">        <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ServerSendEventHandler.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> ServerSendEventHandlerException <span class=\"keyword\">from</span> <span class=\"string\">'./ServerSendEventHandlerException.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> ADD = <span class=\"number\">0</span>; <span class=\"comment\">// 產品新增事件代碼</span></div><div class=\"line\"><span class=\"keyword\">const</span> UPDATE = <span class=\"number\">1</span>; <span class=\"comment\">// 產品修改事件代碼</span></div><div class=\"line\"><span class=\"keyword\">const</span> DELETE = <span class=\"number\">2</span>; <span class=\"comment\">// 產品刪除事件代碼</span></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Server Send Event 處理物件</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerSendEventHandler</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> () &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.update_events = [];</div><div class=\"line\">        <span class=\"keyword\">this</span>.delete_events = [];</div><div class=\"line\">        <span class=\"keyword\">this</span>.add_events = [];</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 取得產品新增事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">static</span> get ADD () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> ADD;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 取得產品修改事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">static</span> get UPDATE () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> UPDATE;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 取得產品刪除事件代碼</div><div class=\"line\">     * @returns &#123;number&#125;</div><div class=\"line\">     * @constructor</div><div class=\"line\">     */</span></div><div class=\"line\">    <span class=\"keyword\">static</span> get DELETE () &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> DELETE;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 開始監聽 Server Send Event 並進行處理</div><div class=\"line\">     * @param url</div><div class=\"line\">     */</span></div><div class=\"line\">    listen (url) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ([<span class=\"keyword\">this</span>.update_events.length, <span class=\"keyword\">this</span>.delete_events.length, <span class=\"keyword\">this</span>.add_events.length].includes(<span class=\"number\">0</span>)) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #2: Event handlers must be specified before listing event.`</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">let</span> event_source = <span class=\"keyword\">new</span> EventSource(url);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'add'</span>,  (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.add_events.forEach( event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'update'</span>,  (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.update_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.addEventListener(<span class=\"string\">'delete'</span>, (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">let</span> response_data = <span class=\"built_in\">JSON</span>.parse(e.data);</div><div class=\"line\">            <span class=\"keyword\">this</span>.delete_events.forEach(event_handler =&gt; event_handler(response_data));</div><div class=\"line\">        &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\">        event_source.onerror = (e) =&gt; &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #4: Server send event failed: <span class=\"subst\">$&#123;e&#125;</span>.`</span>);</div><div class=\"line\">        &#125;;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 附加事件處理函數</div><div class=\"line\">     * @param event_type</div><div class=\"line\">     * @param event_handler</div><div class=\"line\">     */</span></div><div class=\"line\">    addEventHandler (event_type, event_handler) &#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (event_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.ADD:</div><div class=\"line\">                <span class=\"keyword\">this</span>.add_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.UPDATE:</div><div class=\"line\">                <span class=\"keyword\">this</span>.update_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.DELETE:</div><div class=\"line\">                <span class=\"keyword\">this</span>.delete_events.push(event_handler);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #1: Invalid event types: <span class=\"subst\">$&#123;event_type&#125;</span>.`</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 移除事件處理函數</div><div class=\"line\">     * @param event_type</div><div class=\"line\">     * @param event_handler</div><div class=\"line\">     */</span></div><div class=\"line\">    removeEventHandler (event_type, event_handler) &#123;</div><div class=\"line\">        <span class=\"keyword\">let</span> index;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (event_type) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.ADD:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.add_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.add_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.UPDATE:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.update_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.update_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> ServerSendEventHandler.DELETE:</div><div class=\"line\">                index = <span class=\"keyword\">this</span>.delete_events.findIndex(item =&gt; <span class=\"built_in\">Object</span>.is(item, event_handler));</div><div class=\"line\">                <span class=\"keyword\">if</span> (index === <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #3: No such event handler.`</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">this</span>.delete_events.splice(index, <span class=\"number\">1</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> ServerSendEventHandlerException(<span class=\"string\">`Error #1: Invalid event types: <span class=\"subst\">$&#123;event_type&#125;</span>.`</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ServerSendEventHandlerException.js:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by simon on 9/4/16.</div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * ServerSendEventHandler 專屬 Exception</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServerSendEventHandlerException</span>  <span class=\"keyword\">extends</span> <span class=\"title\">Error</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span>(message) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(message);</div><div class=\"line\">        <span class=\"keyword\">this</span>.name = <span class=\"keyword\">this</span>.constructor.name;</div><div class=\"line\">        <span class=\"keyword\">this</span>.message = message;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>為了讓 ECMAScript 2015 的程式碼能夠順利在瀏覽器上執行，我使用了 <a href=\"https://babeljs.io/\">Babel</a> 和 <a href=\"https://webpack.github.io/\">webpack</a> 將這些 js 轉成 ECMAScript 5 並整合成一個 bundle.js 檔案給 main.html 載入。</p>\n<p>最後的主要進入頁面如下 main.html:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"bundle.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>產品名稱<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>價格<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>庫存<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tbody</span> <span class=\"attr\">id</span>=<span class=\"string\">\"product_list\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>整個專案的程式可以再 <a href=\"https://github.com/smjhang/demos/tree/master/server-send-event\">GitHub</a>下載。</p>\n<h2 id=\"開始測試\"><a href=\"#開始測試\" class=\"headerlink\" title=\"開始測試\"></a>開始測試</h2><p>首先在 Redis 插入起始資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">1</span> <span class=\"keyword\">name</span> <span class=\"string\">'芭樂'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">2</span> <span class=\"keyword\">name</span> <span class=\"string\">'西瓜'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">3</span> <span class=\"keyword\">name</span> <span class=\"string\">'蓮霧'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">4</span> <span class=\"keyword\">name</span> <span class=\"string\">'鳳梨'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">5</span> <span class=\"keyword\">name</span> <span class=\"string\">'蘋果'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">6</span> <span class=\"keyword\">name</span> <span class=\"string\">'奇異果'</span> price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">7</span> <span class=\"keyword\">name</span> <span class=\"string\">'香蕉'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">8</span> <span class=\"keyword\">name</span> <span class=\"string\">'荔枝'</span>   price <span class=\"number\">5</span> stock <span class=\"number\">99</span></div></pre></td></tr></table></figure></p>\n<p>進入頁面:<br><img src=\"/2016/09/08/server-send-event/main.jpg\" alt=\"第一次進入\" title=\"第一次進入\"></p>\n<p>在 Redis 新增資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">9</span> <span class=\"keyword\">name</span> <span class=\"string\">'小玉西瓜'</span> price <span class=\"number\">15</span> stock <span class=\"number\">79</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/insert.jpg\" alt=\"新增資料\" title=\"新增資料\"></p>\n<p>在 Redis 修改資料:<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HMSET <span class=\"built_in\">product</span>:<span class=\"number\">9</span> <span class=\"keyword\">name</span> <span class=\"string\">'小玉西瓜'</span> price <span class=\"number\">15</span> stock <span class=\"number\">75</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/update.jpg\" alt=\"修改資料\" title=\"修改資料\"></p>\n<p>在 Redis 刪除資料:<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">DEL</span> <span class=\"selector-tag\">product</span><span class=\"selector-pseudo\">:9</span></div></pre></td></tr></table></figure></p>\n<p>查看頁面:<br><img src=\"/2016/09/08/server-send-event/delete.jpg\" alt=\"刪除資料\" title=\"刪除資料\"></p>\n<h1 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h1><p>沿續了 <a href=\"/2016/07/27/redis-notification/\">Redis Notification</a> 一文中關於 Redis 推送資料的範例，本篇進一步使用 SSE 將此資料異動通知給瀏覽器，並且嘗試使用 ES 20015 來進行開發。從測試結果可以看到 SSE 確實能即時通知瀏覽器最新的資訊。<br>雖然 SSE 可以沿用網頁伺服器而不需要自行開發伺服器程式，但是對於 SSE 的運作原理還是要有足夠深入了解，才能了解應該如何設定網頁伺服器，並且注意到許多安全性以及系統架構上的問題。<br>在投入正式產品環境之前，還是要再經過謹慎的評估和測試才能運用。</p>"}],"PostAsset":[{"_id":"source/_posts/server-send-event/delete.jpg","slug":"delete.jpg","post":"civcmytib0002xsav9rhzywf2","modified":0,"renderable":0},{"_id":"source/_posts/server-send-event/insert.jpg","slug":"insert.jpg","post":"civcmytib0002xsav9rhzywf2","modified":0,"renderable":0},{"_id":"source/_posts/server-send-event/main.jpg","slug":"main.jpg","post":"civcmytib0002xsav9rhzywf2","modified":0,"renderable":0},{"_id":"source/_posts/server-send-event/update.jpg","slug":"update.jpg","post":"civcmytib0002xsav9rhzywf2","modified":0,"renderable":0},{"_id":"source/_posts/server-send-event/通訊流程圖.jpg","slug":"通訊流程圖.jpg","post":"civcmytib0002xsav9rhzywf2","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"civcmyti40000xsavb1a3u3o0","tag_id":"civcmytif0004xsavqzqyx7yh","_id":"civcmytir0007xsava2kht54o"},{"post_id":"civcmytib0002xsav9rhzywf2","tag_id":"civcmytiq0006xsavo6hqzscb","_id":"civcmytiv0009xsavy9cc8ry8"},{"post_id":"civcmytib0002xsav9rhzywf2","tag_id":"civcmytir0008xsavlinmg202","_id":"civcmytiy000axsav6frr7914"}],"Tag":[{"name":"Redis","_id":"civcmytif0004xsavqzqyx7yh"},{"name":"HTML5","_id":"civcmytiq0006xsavo6hqzscb"},{"name":"ES2015","_id":"civcmytir0008xsavlinmg202"}]}}